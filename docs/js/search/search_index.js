var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/SegmentConfig.html",[0,1.012,1,0.831]],["body/interfaces/SegmentConfig.html",[0,1.456,1,1.196,2,1.365,3,1.117,4,1.117,5,0.92,6,0.615,7,0.569,8,1.365,9,1.365,10,2.003,11,0.755,12,1.044,13,2.264,14,2.331,15,2.123,16,2.446,17,2.529,18,3.755,19,3.755,20,2.682,21,0.933,22,0.077,23,1.886,24,2.343,25,3.038,26,2.529,27,2.343,28,3.038,29,2.343,30,2.343,31,2.896,32,3.038,33,3.038,34,3.038,35,2.343,36,3.038,37,1.271,38,2.343,39,0.92,40,1.696,41,1.365,42,1.456,43,1.696,44,1.696,45,2.343,46,0.92,47,0.92,48,1.696,49,1.117,50,1.117,51,1.365,52,1.117,53,1.696,54,0.049,55,0.049]],["title/modules/SegmentModule.html",[56,1.229,57,1.229]],["body/modules/SegmentModule.html",[1,1.291,3,1.12,4,1.12,5,0.922,6,0.85,7,0.578,9,1.889,10,1.546,13,1.546,21,0.492,22,0.078,37,1.706,39,0.922,42,1.273,46,1.273,47,0.922,49,1.12,54,0.05,55,0.05,56,2.124,57,1.91,58,1.368,59,1.368,60,2.204,61,3.043,62,2.204,63,3.043,64,1.7,65,2.204,66,3.043,67,1.12,68,1.12,69,3.486,70,2.204,71,2.163,72,3.486,73,2.688,74,3.043,75,3.043,76,3.043,77,2.204,78,1.7,79,1.546,80,1.889,81,2.204,82,1.273,83,1.91,84,1.368,85,1.7,86,0.922,87,1.12,88,1.368,89,1.7,90,0.922,91,1.7,92,2.347,93,2.204,94,1.7,95,1.889,96,3.043,97,2.204,98,1.368,99,2.204,100,1.12,101,2.347,102,1.12,103,2.204,104,1.368,105,3.486,106,1.7,107,2.204,108,2.204,109,2.204,110,2.204,111,1.7,112,1.7]],["title/interfaces/SegmentPlugin.html",[0,1.012,113,1.229]],["body/interfaces/SegmentPlugin.html",[0,0.27,1,0.528,2,0.401,3,0.329,4,0.581,5,0.27,6,0.181,7,0.273,10,0.581,12,1.312,13,0.942,14,0.401,15,0.78,17,1.452,20,2.468,21,0.565,22,0.078,23,0.709,24,1.634,26,0.401,27,0.881,29,0.499,30,1.185,31,0.499,35,1.185,37,0.979,39,0.27,40,0.881,41,1.452,42,0.979,45,0.881,46,0.27,47,1.186,49,0.329,50,0.581,51,0.401,52,1.076,54,0.019,55,0.019,67,0.329,68,1.827,71,2.023,78,0.499,79,0.329,80,0.401,82,0.478,83,0.581,84,0.401,88,0.709,90,1.058,92,2.773,100,0.329,101,3.296,102,1.975,104,0.401,106,0.499,111,0.881,113,0.78,114,0.401,115,0.647,116,0.581,117,0.647,118,1.143,119,1.143,120,0.647,121,0.647,122,0.647,123,0.647,124,0.647,125,0.647,126,0.647,127,1.536,128,0.499,129,0.499,130,1.185,131,1.805,132,2.576,133,1.185,134,0.881,135,0.881,136,1.854,137,0.647,138,0.647,139,0.647,140,0.647,141,0.647,142,1.143,143,1.143,144,1.536,145,1.536,146,0.647,147,1.143,148,0.647,149,0.647,150,0.647,151,1.143,152,1.854,153,1.536,154,1.854,155,0.647,156,0.647,157,1.854,158,1.143,159,1.143,160,0.647,161,0.647,162,0.499,163,0.647,164,1.143,165,1.143,166,0.647,167,0.647,168,0.647,169,0.647,170,0.647,171,0.647,172,1.536,173,0.953,174,2.118,175,3.071,176,1.185,177,1.143,178,3.596,179,0.647,180,0.647,181,0.647,182,0.647,183,0.647,184,1.143,185,0.647,186,3.596,187,0.647,188,0.647,189,0.647,190,0.647,191,0.647,192,0.647,193,0.647,194,3.142,195,0.647,196,0.647,197,0.647,198,0.647,199,0.647,200,0.647,201,0.647,202,0.647,203,0.647,204,1.143,205,0.647,206,0.647,207,0.647,208,0.647,209,0.647,210,0.647,211,0.647,212,0.647,213,0.499,214,0.647,215,0.647,216,0.647,217,1.854,218,1.536,219,1.536,220,1.143,221,1.854,222,2.73,223,3.479,224,1.143,225,2.73,226,1.143,227,0.647,228,2.445,229,0.647,230,2.187,231,0.881,232,2.34,233,0.647,234,2.118,235,2.34,236,1.854,237,1.854,238,0.647,239,2.023,240,0.647,241,0.647,242,0.499,243,0.647,244,1.536,245,1.536,246,1.536,247,1.536,248,1.854,249,1.854,250,1.536,251,0.647,252,1.854,253,0.881,254,0.647,255,0.647,256,2.835,257,0.647,258,0.647,259,0.647,260,0.647,261,0.647,262,0.647,263,0.647,264,0.647,265,0.647,266,0.647,267,0.647,268,0.647,269,0.647,270,0.647,271,0.647,272,0.647,273,0.647,274,0.647,275,0.647,276,0.499,277,0.647,278,0.647,279,0.647,280,0.647,281,0.647,282,0.647,283,0.647,284,1.185,285,0.647,286,0.647,287,0.647,288,2.693,289,0.647,290,0.499,291,0.647,292,0.647,293,1.143,294,1.536,295,0.647,296,1.143,297,0.647,298,0.401,299,0.647,300,0.647,301,0.647,302,0.647,303,0.881,304,0.647,305,0.647,306,0.499,307,1.143,308,1.143,309,0.647,310,0.647,311,0.647,312,0.499,313,0.647,314,0.647,315,0.647,316,0.647,317,0.647,318,0.647,319,0.647,320,0.647,321,0.647,322,0.499,323,0.647,324,1.143,325,0.647,326,1.536,327,0.499,328,0.647,329,0.647,330,1.185,331,0.647,332,0.647,333,0.499,334,0.647,335,0.647,336,1.143,337,0.647,338,0.647,339,1.143,340,1.143,341,1.143,342,0.647,343,1.143,344,0.647,345,1.143,346,0.499,347,1.43,348,0.647,349,0.647,350,1.536,351,0.647,352,0.647,353,0.499,354,0.647,355,0.647,356,1.143,357,0.499,358,0.647,359,0.709,360,0.647,361,0.881,362,0.499,363,0.647,364,0.881,365,1.143,366,0.499,367,0.647,368,0.647,369,1.854,370,0.647,371,0.647,372,0.647,373,0.647,374,0.647,375,0.401,376,0.647,377,0.647,378,0.329,379,0.499,380,0.499,381,0.647]],["title/injectables/WindowWrapper.html",[82,1.012,116,1.229]],["body/injectables/WindowWrapper.html",[3,1.571,4,1.571,5,1.293,7,0.489,9,1.919,11,1.062,12,1.304,21,0.691,22,0.076,37,1.293,39,1.293,42,1.293,54,0.062,55,0.062,64,2.385,82,1.588,83,1.929,84,2.356,86,1.588,87,1.929,89,2.928,100,1.571,102,2.087,116,1.929,298,2.356,378,2.087,382,2.385,383,2.928,384,2.385,385,3.092]],["title/coverage.html",[386,2.501]],["body/coverage.html",[0,1.545,1,1.016,5,1.237,6,1.237,7,0.57,8,2.499,21,0.661,22,0.075,46,1.237,47,1.237,50,1.503,54,0.06,55,0.06,59,1.836,79,1.503,82,1.237,90,1.237,98,1.836,113,1.503,114,2.292,116,1.876,303,2.281,383,2.281,384,2.281,386,2.281,387,1.836,388,2.958,389,4.217,390,2.958,391,3.693,392,3.693,393,3.693,394,3.693,395,2.958,396,2.958,397,2.958,398,2.958,399,2.958]],["title/miscellaneous/functions.html",[359,1.796,400,0.704]],["body/miscellaneous/functions.html",[6,0.951,7,0.518,11,1.168,13,1.729,21,0.76,22,0.07,54,0.065,55,0.065,59,2.495,67,1.729,68,1.729,83,1.729,85,2.624,86,1.423,87,1.729,91,2.624,98,2.495,359,2.111,400,1.168,401,2.111,402,3.402]],["title/index.html",[11,0.704,403,1.581,404,1.581]],["body/index.html",[7,0.53,12,1.252,14,1.113,15,0.911,16,1.113,17,1.113,20,2.69,22,0.077,23,1.93,26,1.113,37,1.646,39,1.099,41,1.113,42,1.099,52,1.335,54,0.043,55,0.043,56,1.335,57,1.335,67,0.911,68,0.911,71,1.113,73,2.026,79,1.58,80,2.125,86,1.301,87,0.911,88,1.113,90,1.432,94,1.383,95,1.113,100,1.335,102,0.911,104,1.113,112,2.026,113,0.911,130,1.383,131,1.383,132,3.035,173,1.113,176,1.383,194,2.938,213,1.383,222,2.399,225,1.383,228,2.938,230,1.383,231,1.383,239,1.93,242,1.383,253,1.383,276,1.383,284,1.383,290,1.383,298,1.631,322,1.383,327,2.399,330,1.383,333,1.383,346,1.383,347,2.641,353,1.383,357,1.383,361,1.383,362,1.383,364,1.383,366,1.383,375,1.113,378,1.58,379,1.383,380,1.383,387,1.631,405,1.793,406,1.793,407,1.793,408,2.627,409,2.627,410,1.793,411,1.793,412,2.627,413,3.935,414,3.424,415,1.793,416,1.793,417,2.627,418,1.793,419,3.11,420,1.793,421,1.383,422,1.793,423,1.793,424,1.793,425,1.383,426,1.383,427,1.793,428,1.793,429,2.627,430,2.627,431,1.793,432,2.627,433,1.793,434,1.793,435,1.793,436,1.793,437,1.793,438,1.793,439,1.793,440,1.793,441,1.793,442,1.793,443,1.793,444,1.793,445,1.793,446,1.793,447,1.793,448,1.793,449,2.627,450,1.793,451,1.793,452,1.793,453,2.026,454,1.793,455,1.793,456,1.793,457,1.793,458,1.793,459,2.026,460,1.793,461,1.793,462,1.793,463,1.113,464,1.793,465,1.113]],["title/license.html",[403,1.581,404,1.581,466,1.272]],["body/license.html",[22,0.057,54,0.057,55,0.057,162,2.093,239,1.684,312,2.696,387,1.684,426,2.696,453,2.093,459,2.093,463,2.17,465,1.684,466,1.684,467,3.868,468,2.713,469,2.713,470,3.496,471,2.713,472,2.713,473,2.713,474,2.713,475,2.713,476,2.713,477,3.496,478,4.508,479,2.713,480,2.713,481,3.868,482,2.713,483,2.713,484,2.713,485,2.713,486,2.713,487,2.713,488,2.713,489,2.713,490,2.713,491,3.496,492,2.713,493,2.713,494,2.713,495,2.713,496,2.713,497,2.713,498,2.713,499,3.496,500,3.496,501,2.713,502,2.713,503,2.713,504,2.713,505,2.713,506,2.713,507,2.713,508,2.713,509,2.713,510,2.713,511,2.713,512,2.713,513,2.713,514,2.713,515,2.713,516,2.713,517,2.713,518,2.713,519,2.713,520,2.713,521,2.713,522,2.713,523,2.713,524,2.713,525,2.713,526,2.713,527,2.093,528,2.713,529,2.713]],["title/modules.html",[58,2.012]],["body/modules.html",[22,0.068,54,0.068,55,0.068,57,1.84,58,2.248,375,2.248,530,3.622,531,3.622]],["title/overview.html",[532,2.501]],["body/overview.html",[2,2.142,22,0.066,54,0.066,55,0.066,56,2.06,95,2.142,173,2.142,382,2.662,421,2.662,425,2.662,527,2.662,532,2.662,533,3.451,534,3.451,535,3.451,536,4.055,537,3.451,538,4.055]],["title/properties.html",[12,0.994,539,2.05]],["body/properties.html",[7,0.55,12,1.16,22,0.076,54,0.065,55,0.065,86,1.413,378,1.716,463,2.096,465,2.096,466,2.096,540,3.377,541,3.377,542,3.377,543,3.377,544,4.003,545,3.377,546,3.377,547,3.377]],["title/miscellaneous/typealiases.html",[400,0.704,548,2.893]],["body/miscellaneous/typealiases.html",[6,0.915,7,0.575,11,1.124,21,0.878,22,0.064,54,0.064,55,0.064,90,1.827,114,2.772,128,2.524,129,3.03,133,3.03,134,3.03,135,3.03,400,1.124,401,2.71,549,3.273]],["title/miscellaneous/variables.html",[400,0.704,550,2.232]],["body/miscellaneous/variables.html",[1,1.087,6,0.884,7,0.57,8,2.575,10,1.608,11,1.087,15,1.608,16,1.964,21,0.86,22,0.075,38,2.44,43,2.44,44,2.44,46,1.61,47,1.324,48,2.44,49,1.608,50,1.956,51,1.964,52,1.608,53,2.44,54,0.063,55,0.063,306,2.969,400,1.087,401,2.389,550,2.44,551,3.85]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":392,"title":{},"body":{"coverage.html":{}}}],["0/1",{"_index":393,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":537,"title":{},"body":{"overview.html":{}}}],["1/1",{"_index":394,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":389,"title":{},"body":{"coverage.html":{}}}],["17.0.0",{"_index":541,"title":{},"body":{"properties.html":{}}}],["2",{"_index":538,"title":{},"body":{"overview.html":{}}}],["2/2",{"_index":397,"title":{},"body":{"coverage.html":{}}}],["2017",{"_index":469,"title":{},"body":{"license.html":{}}}],["2019",{"_index":464,"title":{},"body":{"index.html":{}}}],["23/27",{"_index":396,"title":{},"body":{"coverage.html":{}}}],["4.15.3",{"_index":210,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["7/7",{"_index":390,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":395,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":234,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["_config",{"_index":141,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["_doc",{"_index":143,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["_w",{"_index":142,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["above",{"_index":498,"title":{},"body":{"license.html":{}}}],["accesstoken",{"_index":125,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["action",{"_index":522,"title":{},"body":{"license.html":{}}}],["actions",{"_index":219,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["add",{"_index":364,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["adddestinationmiddleware",{"_index":183,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["adddestinationmiddleware(integration",{"_index":370,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["addintegrationmiddleware",{"_index":181,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["addsourcemiddleware",{"_index":180,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["addsourcemiddleware(middleware",{"_index":366,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["alias",{"_index":177,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["alias(userid",{"_index":290,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["aliases",{"_index":549,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":292,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["along",{"_index":246,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["already",{"_index":110,"title":{},"body":{"modules/SegmentModule.html":{}}}],["analytics",{"_index":378,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{},"properties.html":{}}}],["analytics.config",{"_index":49,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"miscellaneous/variables.html":{}}}],["analytics.config.ts",{"_index":8,"title":{},"body":{"interfaces/SegmentConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["analytics.js",{"_index":298,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["analytics.module.ts",{"_index":59,"title":{},"body":{"modules/SegmentModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["analytics.module.ts:32",{"_index":65,"title":{},"body":{"modules/SegmentModule.html":{}}}],["analytics.service",{"_index":81,"title":{},"body":{"modules/SegmentModule.html":{}}}],["analytics.service.ts",{"_index":114,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["analytics/issues",{"_index":545,"title":{},"body":{"properties.html":{}}}],["analyticsconsuming",{"_index":416,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":489,"title":{},"body":{"license.html":{}}}],["angular",{"_index":86,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["angular/common",{"_index":78,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{}}}],["angular/core",{"_index":39,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["angular/platform",{"_index":418,"title":{},"body":{"index.html":{}}}],["anonymous",{"_index":307,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["anonymousid",{"_index":308,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["aot",{"_index":87,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["api",{"_index":23,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["apikey",{"_index":14,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["app.component",{"_index":420,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":419,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":112,"title":{},"body":{"modules/SegmentModule.html":{},"index.html":{}}}],["args",{"_index":187,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["args.unshift(method",{"_index":188,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["arising",{"_index":526,"title":{},"body":{"license.html":{}}}],["array",{"_index":341,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["assemblage",{"_index":264,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["associate",{"_index":217,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["associated",{"_index":479,"title":{},"body":{"license.html":{}}}],["associates",{"_index":255,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["attaches",{"_index":335,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["author",{"_index":547,"title":{},"body":{"properties.html":{}}}],["authors",{"_index":515,"title":{},"body":{"license.html":{}}}],["available",{"_index":375,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{},"modules.html":{}}}],["being",{"_index":249,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["binds",{"_index":349,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["boolean",{"_index":26,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["bootstrap",{"_index":425,"title":{},"body":{"index.html":{},"overview.html":{}}}],["bound",{"_index":342,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["browse",{"_index":531,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":88,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["browsermodule",{"_index":417,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":543,"title":{},"body":{"properties.html":{}}}],["buildto",{"_index":458,"title":{},"body":{"index.html":{}}}],["c",{"_index":468,"title":{},"body":{"license.html":{}}}],["call",{"_index":336,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["callback",{"_index":330,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["callbacks",{"_index":357,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["called",{"_index":294,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["came",{"_index":270,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["category",{"_index":252,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["charge",{"_index":474,"title":{},"body":{"license.html":{}}}],["claim",{"_index":518,"title":{},"body":{"license.html":{}}}],["class",{"_index":100,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["clear",{"_index":313,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["cluster",{"_index":265,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["code",{"_index":328,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["combines",{"_index":278,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["commonmodule",{"_index":76,"title":{},"body":{"modules/SegmentModule.html":{}}}],["company",{"_index":257,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["compatibility",{"_index":53,"title":{},"body":{"interfaces/SegmentConfig.html":{},"miscellaneous/variables.html":{}}}],["compatible",{"_index":409,"title":{},"body":{"index.html":{}}}],["completed",{"_index":299,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["component",{"_index":429,"title":{},"body":{"index.html":{}}}],["concept",{"_index":273,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["conditions",{"_index":497,"title":{},"body":{"license.html":{}}}],["config",{"_index":69,"title":{},"body":{"modules/SegmentModule.html":{}}}],["configuration",{"_index":10,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"miscellaneous/variables.html":{}}}],["connection",{"_index":528,"title":{},"body":{"license.html":{}}}],["console",{"_index":320,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["console.error('segment",{"_index":160,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["console.error('the",{"_index":155,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["console.log(\"event",{"_index":442,"title":{},"body":{"index.html":{}}}],["console.log('segment",{"_index":165,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["const",{"_index":45,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["constructor",{"_index":104,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["constructor(@optional",{"_index":107,"title":{},"body":{"modules/SegmentModule.html":{}}}],["constructor(private",{"_index":439,"title":{},"body":{"index.html":{}}}],["contract",{"_index":523,"title":{},"body":{"license.html":{}}}],["copies",{"_index":491,"title":{},"body":{"license.html":{}}}],["copy",{"_index":477,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":467,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":386,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current",{"_index":275,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["currently",{"_index":288,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["custom",{"_index":35,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["d.ts",{"_index":456,"title":{},"body":{"index.html":{}}}],["damages",{"_index":519,"title":{},"body":{"license.html":{}}}],["database",{"_index":229,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["deal",{"_index":480,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":529,"title":{},"body":{"license.html":{}}}],["debug",{"_index":15,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["debug(enabled",{"_index":322,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["declarations",{"_index":421,"title":{},"body":{"index.html":{},"overview.html":{}}}],["default",{"_index":306,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"miscellaneous/variables.html":{}}}],["default_config",{"_index":50,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":287,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["defined",{"_index":64,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["dependencies",{"_index":533,"title":{},"body":{"overview.html":{}}}],["deprecated",{"_index":127,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["deps",{"_index":99,"title":{},"body":{"modules/SegmentModule.html":{}}}],["description",{"_index":9,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["destination",{"_index":368,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["destinationmiddleware",{"_index":135,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"miscellaneous/typealiases.html":{}}}],["destinationmiddlewareparams",{"_index":120,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["destinations",{"_index":297,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["dictionary",{"_index":223,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["distlicense",{"_index":462,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":487,"title":{},"body":{"license.html":{}}}],["document",{"_index":117,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["documentation",{"_index":387,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":144,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["each",{"_index":331,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["element",{"_index":340,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["elements",{"_index":339,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["email",{"_index":226,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["emitted",{"_index":332,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["empty",{"_index":156,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["enable",{"_index":321,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["enabled",{"_index":296,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["error('segmentmodule",{"_index":109,"title":{},"body":{"modules/SegmentModule.html":{}}}],["event",{"_index":239,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{},"license.html":{}}}],["events",{"_index":326,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["example",{"_index":413,"title":{},"body":{"index.html":{}}}],["execute",{"_index":293,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["export",{"_index":42,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["exports",{"_index":535,"title":{},"body":{"overview.html":{}}}],["express",{"_index":506,"title":{},"body":{"license.html":{}}}],["extra",{"_index":247,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["false",{"_index":51,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{}}}],["files",{"_index":453,"title":{},"body":{"index.html":{},"license.html":{}}}],["first",{"_index":204,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["first.parentnode.insertbefore(script",{"_index":206,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["fitness",{"_index":511,"title":{},"body":{"license.html":{}}}],["following",{"_index":496,"title":{},"body":{"license.html":{}}}],["form",{"_index":350,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["forms",{"_index":352,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["forroot",{"_index":62,"title":{},"body":{"modules/SegmentModule.html":{}}}],["forroot(config",{"_index":63,"title":{},"body":{"modules/SegmentModule.html":{}}}],["free",{"_index":473,"title":{},"body":{"license.html":{}}}],["full",{"_index":444,"title":{},"body":{"index.html":{}}}],["function",{"_index":90,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":359,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/SegmentPlugin.html":{},"miscellaneous/functions.html":{}}}],["furnished",{"_index":494,"title":{},"body":{"license.html":{}}}],["future",{"_index":376,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["gang",{"_index":267,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["generate",{"_index":455,"title":{},"body":{"index.html":{}}}],["getting",{"_index":403,"title":{"index.html":{},"license.html":{}},"body":{}}],["getwindow",{"_index":98,"title":{},"body":{"modules/SegmentModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getwindow(platformid",{"_index":91,"title":{},"body":{"modules/SegmentModule.html":{},"miscellaneous/functions.html":{}}}],["granted",{"_index":472,"title":{},"body":{"license.html":{}}}],["graph",{"_index":530,"title":{},"body":{"modules.html":{}}}],["group",{"_index":174,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["group(groupid",{"_index":276,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["groupid",{"_index":274,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["handler",{"_index":337,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["helper",{"_index":358,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["helpful",{"_index":318,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["here",{"_index":445,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":471,"title":{},"body":{"license.html":{}}}],["hero",{"_index":432,"title":{},"body":{"index.html":{}}}],["hero.component.css",{"_index":436,"title":{},"body":{"index.html":{}}}],["hero.component.html",{"_index":434,"title":{},"body":{"index.html":{}}}],["herocomponent",{"_index":437,"title":{},"body":{"index.html":{}}}],["holders",{"_index":516,"title":{},"body":{"license.html":{}}}],["host",{"_index":32,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["htmlelement",{"_index":347,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["https",{"_index":201,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["https://github.com/opendecide/ngx",{"_index":544,"title":{},"body":{"properties.html":{}}}],["id",{"_index":230,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["identified",{"_index":256,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["identifier",{"_index":303,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"coverage.html":{}}}],["identify",{"_index":172,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["identify(traits",{"_index":227,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["identify(userid",{"_index":231,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["identities",{"_index":282,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["implements",{"_index":438,"title":{},"body":{"index.html":{}}}],["implied",{"_index":507,"title":{},"body":{"license.html":{}}}],["import",{"_index":37,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["importation",{"_index":422,"title":{},"body":{"index.html":{}}}],["imports",{"_index":94,"title":{},"body":{"modules/SegmentModule.html":{},"index.html":{}}}],["included",{"_index":162,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"license.html":{}}}],["including",{"_index":312,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"license.html":{}}}],["incorrect",{"_index":128,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"miscellaneous/typealiases.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"interfaces/SegmentConfig.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{}}}],["information",{"_index":248,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["informations",{"_index":301,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["initialisation",{"_index":66,"title":{},"body":{"modules/SegmentModule.html":{}}}],["initialization",{"_index":30,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["initialized",{"_index":215,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["initoptions",{"_index":119,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["inject",{"_index":115,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["inject(document",{"_index":148,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["inject(segment_config",{"_index":149,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["inject(windowwrapper",{"_index":146,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["injectable",{"_index":116,"title":{"injectables/WindowWrapper.html":{}},"body":{"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{}}}],["injectables",{"_index":382,"title":{},"body":{"injectables/WindowWrapper.html":{},"overview.html":{}}}],["injected",{"_index":427,"title":{},"body":{"index.html":{}}}],["injection",{"_index":43,"title":{},"body":{"interfaces/SegmentConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":38,"title":{},"body":{"interfaces/SegmentConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('ngx",{"_index":48,"title":{},"body":{"interfaces/SegmentConfig.html":{},"miscellaneous/variables.html":{}}}],["install",{"_index":412,"title":{},"body":{"index.html":{}}}],["installation",{"_index":411,"title":{},"body":{"index.html":{}}}],["instance",{"_index":89,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["instead",{"_index":447,"title":{},"body":{"index.html":{}}}],["integration",{"_index":136,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["integrations",{"_index":130,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"overview.html":{}}}],["isplatformbrowser",{"_index":77,"title":{},"body":{"modules/SegmentModule.html":{}}}],["isplatformbrowser(platformid",{"_index":93,"title":{},"body":{"modules/SegmentModule.html":{}}}],["js",{"_index":379,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["key",{"_index":24,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["keywords",{"_index":542,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":505,"title":{},"body":{"license.html":{}}}],["know",{"_index":224,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["legend",{"_index":534,"title":{},"body":{"overview.html":{}}}],["length",{"_index":355,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["lets",{"_index":236,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["liability",{"_index":520,"title":{},"body":{"license.html":{}}}],["liable",{"_index":517,"title":{},"body":{"license.html":{}}}],["library",{"_index":408,"title":{},"body":{"index.html":{}}}],["license",{"_index":466,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["limitation",{"_index":483,"title":{},"body":{"license.html":{}}}],["limited",{"_index":508,"title":{},"body":{"license.html":{}}}],["link",{"_index":338,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["lint",{"_index":451,"title":{},"body":{"index.html":{}}}],["lintto",{"_index":454,"title":{},"body":{"index.html":{}}}],["listen",{"_index":329,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["listeners",{"_index":325,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["load",{"_index":29,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["load(apikey",{"_index":213,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["loaded",{"_index":111,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{}}}],["loadoninitialization",{"_index":16,"title":{},"body":{"interfaces/SegmentConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["logging",{"_index":317,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["matching",{"_index":55,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":510,"title":{},"body":{"license.html":{}}}],["merge",{"_index":486,"title":{},"body":{"license.html":{}}}],["messages",{"_index":319,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["metadata.json",{"_index":457,"title":{},"body":{"index.html":{}}}],["method",{"_index":186,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["methods",{"_index":60,"title":{},"body":{"modules/SegmentModule.html":{}}}],["middleware",{"_index":365,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["middlewareparams",{"_index":121,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["middlewares",{"_index":369,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["milliseconds",{"_index":356,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["miscellaneous",{"_index":400,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":463,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mode",{"_index":27,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["modify",{"_index":485,"title":{},"body":{"license.html":{}}}],["module",{"_index":56,"title":{"modules/SegmentModule.html":{}},"body":{"modules/SegmentModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":58,"title":{"modules.html":{}},"body":{"modules/SegmentModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":72,"title":{},"body":{"modules/SegmentModule.html":{}}}],["name",{"_index":68,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["new",{"_index":47,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["new(player",{"_index":124,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["newsegmentplugin",{"_index":118,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["next",{"_index":41,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["next/src/plugins/middleware",{"_index":122,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["ngmodule",{"_index":73,"title":{},"body":{"modules/SegmentModule.html":{},"index.html":{}}}],["ngoninit",{"_index":440,"title":{},"body":{"index.html":{}}}],["ngx",{"_index":80,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["noninfringement",{"_index":514,"title":{},"body":{"license.html":{}}}],["notice",{"_index":499,"title":{},"body":{"license.html":{}}}],["npm",{"_index":414,"title":{},"body":{"index.html":{}}}],["npmjs",{"_index":460,"title":{},"body":{"index.html":{}}}],["null",{"_index":106,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{}}}],["number",{"_index":361,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["object",{"_index":449,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":476,"title":{},"body":{"license.html":{}}}],["official",{"_index":407,"title":{},"body":{"index.html":{}}}],["on(method",{"_index":333,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["on/off",{"_index":316,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["once",{"_index":179,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["oninit",{"_index":430,"title":{},"body":{"index.html":{}}}],["opendecide",{"_index":465,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["optional",{"_index":13,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":194,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["organization",{"_index":258,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["others",{"_index":126,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["otherwise",{"_index":525,"title":{},"body":{"license.html":{}}}],["out",{"_index":527,"title":{},"body":{"license.html":{},"overview.html":{}}}],["override",{"_index":305,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["overview",{"_index":532,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":539,"title":{"properties.html":{}},"body":{}}],["page",{"_index":178,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["page(category",{"_index":253,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["page(name",{"_index":251,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["pageview",{"_index":171,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["param",{"_index":101,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{}}}],["parameters",{"_index":67,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["parentmodule",{"_index":105,"title":{},"body":{"modules/SegmentModule.html":{}}}],["particular",{"_index":512,"title":{},"body":{"license.html":{}}}],["party",{"_index":268,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["pass",{"_index":345,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["passed",{"_index":343,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["payload",{"_index":131,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["perform",{"_index":238,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["permission",{"_index":470,"title":{},"body":{"license.html":{}}}],["permit",{"_index":492,"title":{},"body":{"license.html":{}}}],["person",{"_index":475,"title":{},"body":{"license.html":{}}}],["persons",{"_index":493,"title":{},"body":{"license.html":{}}}],["platform_id",{"_index":74,"title":{},"body":{"modules/SegmentModule.html":{}}}],["platformid",{"_index":402,"title":{},"body":{"miscellaneous/functions.html":{}}}],["platoon",{"_index":263,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["plugin",{"_index":31,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["pluginname",{"_index":380,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["plugins",{"_index":17,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["portions",{"_index":502,"title":{},"body":{"license.html":{}}}],["previous",{"_index":285,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["previousid",{"_index":284,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["previously",{"_index":280,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["private",{"_index":147,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["project",{"_index":259,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["promise",{"_index":228,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["promise((resolve",{"_index":232,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["promises",{"_index":446,"title":{},"body":{"index.html":{}}}],["properties",{"_index":12,"title":{"properties.html":{}},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{},"properties.html":{}}}],["protected",{"_index":139,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["provide",{"_index":96,"title":{},"body":{"modules/SegmentModule.html":{}}}],["provided",{"_index":503,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":137,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["provider",{"_index":85,"title":{},"body":{"modules/SegmentModule.html":{},"miscellaneous/functions.html":{}}}],["providers",{"_index":95,"title":{},"body":{"modules/SegmentModule.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":405,"title":{},"body":{"index.html":{}}}],["proxied",{"_index":34,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["public",{"_index":102,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["publish",{"_index":459,"title":{},"body":{"index.html":{},"license.html":{}}}],["purpose",{"_index":513,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":140,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["ready",{"_index":176,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["recognizable",{"_index":220,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["recognized",{"_index":286,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["record",{"_index":237,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["register",{"_index":184,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["register(...plugins",{"_index":372,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["registered",{"_index":374,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["registry",{"_index":461,"title":{},"body":{"index.html":{}}}],["releases",{"_index":377,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["repository",{"_index":546,"title":{},"body":{"properties.html":{}}}],["requests",{"_index":33,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["reset",{"_index":173,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{},"overview.html":{}}}],["resolve(this",{"_index":235,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["restriction",{"_index":482,"title":{},"body":{"license.html":{}}}],["results",{"_index":54,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":92,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{}}}],["returns",{"_index":71,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["rights",{"_index":484,"title":{},"body":{"license.html":{}}}],["root",{"_index":138,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["run",{"_index":327,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["same",{"_index":272,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["save",{"_index":415,"title":{},"body":{"index.html":{}}}],["script",{"_index":195,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["script.async",{"_index":199,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["script.src",{"_index":200,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["script.type",{"_index":197,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segment",{"_index":7,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["segment.io",{"_index":25,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["segment/analytics",{"_index":40,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["segment_config",{"_index":46,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["segmentconfig",{"_index":1,"title":{"interfaces/SegmentConfig.html":{}},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["segmenthost",{"_index":18,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["segmentmiddleware",{"_index":129,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"miscellaneous/typealiases.html":{}}}],["segmentmodule",{"_index":57,"title":{"modules/SegmentModule.html":{}},"body":{"modules/SegmentModule.html":{},"index.html":{},"modules.html":{}}}],["segmentmodule.forroot",{"_index":423,"title":{},"body":{"index.html":{}}}],["segmentnextmiddleware",{"_index":133,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"miscellaneous/typealiases.html":{}}}],["segmentplugin",{"_index":113,"title":{"interfaces/SegmentPlugin.html":{}},"body":{"interfaces/SegmentPlugin.html":{},"coverage.html":{},"index.html":{}}}],["segmentservice",{"_index":79,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"index.html":{}}}],["segmenturi",{"_index":19,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["selector",{"_index":431,"title":{},"body":{"index.html":{}}}],["sell",{"_index":490,"title":{},"body":{"license.html":{}}}],["sended",{"_index":443,"title":{},"body":{"index.html":{}}}],["service",{"_index":428,"title":{},"body":{"index.html":{}}}],["set",{"_index":324,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["setanonymousid",{"_index":182,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["setanonymousid(anonymousid",{"_index":309,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["shall",{"_index":500,"title":{},"body":{"license.html":{}}}],["skipself",{"_index":75,"title":{},"body":{"modules/SegmentModule.html":{}}}],["snippet",{"_index":161,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["society",{"_index":269,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["software",{"_index":478,"title":{},"body":{"license.html":{}}}],["soon",{"_index":295,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{}}}],["sourcemiddleware",{"_index":134,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../ngx",{"_index":401,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/ngx",{"_index":6,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/window",{"_index":383,"title":{},"body":{"injectables/WindowWrapper.html":{},"coverage.html":{}}}],["started",{"_index":404,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":388,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":61,"title":{},"body":{"modules/SegmentModule.html":{}}}],["status",{"_index":28,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["string",{"_index":20,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["styleurls",{"_index":435,"title":{},"body":{"index.html":{}}}],["subject",{"_index":495,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":488,"title":{},"body":{"license.html":{}}}],["submission",{"_index":351,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["substantial",{"_index":501,"title":{},"body":{"license.html":{}}}],["table",{"_index":399,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":398,"title":{},"body":{"coverage.html":{}}}],["taking",{"_index":448,"title":{},"body":{"index.html":{}}}],["team",{"_index":261,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["templateurl",{"_index":433,"title":{},"body":{"index.html":{}}}],["text/javascript",{"_index":198,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._config",{"_index":150,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._config.apikey",{"_index":153,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._config.debug",{"_index":164,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._config.loadoninitialization",{"_index":151,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._config.segmenthost",{"_index":202,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._config.segmenturi.replace('$api_key",{"_index":203,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._doc.createelement('script",{"_index":196,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._doc.getelementsbytagname('script')[0",{"_index":205,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics",{"_index":157,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics._loadoptions",{"_index":207,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics._writekey",{"_index":208,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.adddestinationmiddleware(integration",{"_index":371,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.addsourcemiddleware(middleware",{"_index":367,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.alias(userid",{"_index":291,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.debug(enabled",{"_index":323,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.factory",{"_index":185,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.factory(method",{"_index":192,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.group(groupid",{"_index":277,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.id",{"_index":304,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.identify(userid",{"_index":233,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.initialize",{"_index":158,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.invoked",{"_index":159,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.load",{"_index":193,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.load(apikey",{"_index":214,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.methods",{"_index":166,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.methods.foreach((method",{"_index":190,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.on(method",{"_index":334,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.page(category",{"_index":254,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.plugins",{"_index":381,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.push(args",{"_index":189,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.ready(_",{"_index":300,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.register(...plugins",{"_index":373,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.reset",{"_index":314,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.setanonymousid(anonymousid",{"_index":310,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.snippet_version",{"_index":209,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.timeout(timeout",{"_index":363,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.track(event",{"_index":243,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.trackform(forms",{"_index":354,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.tracklink(elements",{"_index":348,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.user",{"_index":302,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.user().traits",{"_index":311,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics[method",{"_index":191,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.debug(this._config.debug",{"_index":216,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.load(this._config.apikey",{"_index":211,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.segment.track('load",{"_index":441,"title":{},"body":{"index.html":{}}}],["throw",{"_index":108,"title":{},"body":{"modules/SegmentModule.html":{}}}],["timeout",{"_index":360,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["timeout(timeout",{"_index":362,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["token",{"_index":44,"title":{},"body":{"interfaces/SegmentConfig.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":524,"title":{},"body":{"license.html":{}}}],["track",{"_index":175,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["track(event",{"_index":242,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["trackclick",{"_index":168,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["trackform",{"_index":170,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["trackform(forms",{"_index":353,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["tracking",{"_index":241,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["tracklink",{"_index":169,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["tracklink(elements",{"_index":346,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["tracksubmit",{"_index":167,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["traits",{"_index":222,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["tribe",{"_index":262,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["troop",{"_index":266,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["true",{"_index":52,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":452,"title":{},"body":{"index.html":{}}}],["turn",{"_index":315,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["twice",{"_index":163,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["two",{"_index":279,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["type",{"_index":21,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":548,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":152,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["unassociated",{"_index":281,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["undefined",{"_index":154,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["universal",{"_index":410,"title":{},"body":{"index.html":{}}}],["up",{"_index":271,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["uri",{"_index":36,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["use",{"_index":426,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":344,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["usefactory",{"_index":97,"title":{},"body":{"modules/SegmentModule.html":{}}}],["user",{"_index":225,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["userconfig",{"_index":145,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["userid",{"_index":221,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["users",{"_index":218,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["user’s",{"_index":289,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["usevalue",{"_index":103,"title":{},"body":{"modules/SegmentModule.html":{}}}],["using",{"_index":406,"title":{},"body":{"index.html":{}}}],["value",{"_index":551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":391,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":550,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":540,"title":{},"body":{"properties.html":{}}}],["video",{"_index":123,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["viewed",{"_index":250,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["views",{"_index":244,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["void",{"_index":132,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["void;development",{"_index":450,"title":{},"body":{"index.html":{}}}],["want",{"_index":283,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["warranties",{"_index":509,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":504,"title":{},"body":{"license.html":{}}}],["website",{"_index":245,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["whether",{"_index":521,"title":{},"body":{"license.html":{}}}],["window",{"_index":83,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/functions.html":{}}}],["windowwrapper",{"_index":82,"title":{"injectables/WindowWrapper.html":{}},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{}}}],["without",{"_index":481,"title":{},"body":{"license.html":{}}}],["workspace",{"_index":260,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["wrapper",{"_index":84,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{}}}],["wrapper.ts",{"_index":384,"title":{},"body":{"injectables/WindowWrapper.html":{},"coverage.html":{}}}],["wrapper.ts:9",{"_index":385,"title":{},"body":{"injectables/WindowWrapper.html":{}}}],["write",{"_index":212,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["yes",{"_index":70,"title":{},"body":{"modules/SegmentModule.html":{}}}],["your_write_apikey",{"_index":424,"title":{},"body":{"index.html":{}}}],["you’re",{"_index":240,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["zoom",{"_index":536,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/SegmentConfig.html":{"url":"interfaces/SegmentConfig.html","title":"interface - SegmentConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SegmentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-segment-analytics.config.ts\n        \n\n\n            \n                Description\n            \n            \n                Segment Configuration Interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            apiKey\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            debug\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            loadOnInitialization\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            plugins\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            segmentHost\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            segmentUri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apiKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    API Key for Segment.io\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        debug:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Debug mode status\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadOnInitialization\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loadOnInitialization:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Load Segment configuration on initialization\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plugins\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plugins:     Plugin[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Plugin[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Plugins\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        segmentHost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        segmentHost:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Segment Host if requests are proxied\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        segmentUri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        segmentUri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Segment Custom URI\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {InjectionToken} from '@angular/core';\nimport type {Plugin} from '@segment/analytics-next';\n\n/**\n * Segment Configuration Interface\n */\nexport interface SegmentConfig {\n    /** API Key for Segment.io */\n    apiKey?: string;\n    /** Debug mode status */\n    debug?: boolean;\n    /** Load Segment configuration on initialization */\n    loadOnInitialization?: boolean;\n    /** Segment Host if requests are proxied **/\n    segmentHost?: string;\n    /** Segment Custom URI **/\n    segmentUri?: string;\n    /** Plugins **/\n    plugins?: Plugin[];\n}\n\n/** Segment Configuration Injection Token */\nexport const SEGMENT_CONFIG: InjectionToken = new InjectionToken('ngx-segment-analytics.config');\n\nexport const DEFAULT_CONFIG: SegmentConfig = {\n    debug: false,\n    loadOnInitialization: true, // Compatibility \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SegmentModule.html":{"url":"modules/SegmentModule.html","title":"module - SegmentModule","body":"\n                   \n\n\n\n\n    Modules\n    SegmentModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/ngx-segment-analytics.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Segment Module\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(config?: SegmentConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/ngx-segment-analytics.module.ts:32\n                        \n                    \n\n\n            \n                \n                        Segment Module Initialisation\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                            SegmentConfig\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Segment Configuration\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ModuleWithProviders\n\n                        \n                            \n                                Segment Module\n\n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import {ModuleWithProviders, NgModule, Optional, PLATFORM_ID, SkipSelf} from '@angular/core';\nimport {CommonModule, isPlatformBrowser} from '@angular/common';\nimport {SegmentService} from './ngx-segment-analytics.service';\nimport {SEGMENT_CONFIG, SegmentConfig} from './ngx-segment-analytics.config';\nimport {WindowWrapper} from './window-wrapper';\n\n/**\n * Window Provider for Angular AOT\n * @returns Browser Window instance\n */\nexport function getWindow(platformId: any) {\n    return isPlatformBrowser(platformId) ? window : {};\n}\n\n/**\n * Segment Module\n */\n@NgModule({\n    imports: [CommonModule],\n    providers: [\n        {provide: WindowWrapper, useFactory: getWindow, deps: [PLATFORM_ID]},\n    ]\n})\nexport class SegmentModule {\n\n    /**\n     * Segment Module Initialisation\n     *\n     * @param config Segment Configuration\n     * @returns Segment Module\n     */\n    public static forRoot(config?: SegmentConfig): ModuleWithProviders {\n        return {\n            ngModule: SegmentModule,\n            providers: [\n                {provide: SEGMENT_CONFIG, useValue: config},\n                SegmentService,\n            ],\n        };\n    }\n\n    /**\n     * Segment Module Constructor\n     *\n     * @param parentModule Must be null\n     */\n    constructor(@Optional() @SkipSelf() parentModule: SegmentModule) {\n        if (parentModule) {\n            throw new Error('SegmentModule is already loaded. Import it in the AppModule only');\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SegmentPlugin.html":{"url":"interfaces/SegmentPlugin.html","title":"interface - SegmentPlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SegmentPlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-segment-analytics.service.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Inject, Injectable} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {DEFAULT_CONFIG, SEGMENT_CONFIG, SegmentConfig} from './ngx-segment-analytics.config';\nimport {WindowWrapper} from './window-wrapper';\nimport type {Plugin as NewSegmentPlugin, InitOptions} from '@segment/analytics-next';\n\n// import type {DestinationMiddlewareParams, MiddlewareParams} from '@segment/analytics-next/src/plugins/middleware';\n\nexport interface SegmentPlugin {\n    // Video Plugins\n    new(player: any, accessToken: string): any;\n\n    // Others plugins\n    new(): any;\n}\n\n/**\n * @deprecated This type is incorrect\n */\nexport type SegmentMiddleware = ({integrations, payload, next}) => void;\nexport type SegmentNextMiddleware = (payload: any) => void;\nexport type SourceMiddleware = ({integrations, payload, next}: {\n    integrations: { [key: string]: any },\n    payload: any,\n    next: SegmentNextMiddleware,\n}) => void;\nexport type DestinationMiddleware = ({integration, payload, next}: {\n    integration: string,\n    payload: any,\n    next: SegmentNextMiddleware,\n}) => void;\n\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SegmentService {\n\n    protected readonly _config: SegmentConfig;\n\n    /**\n     * @param _w Browser window\n     * @param _doc Browser DOM\n     * @param userConfig Segment configuration\n     */\n    constructor(\n        @Inject(WindowWrapper) private _w: WindowWrapper,\n        @Inject(DOCUMENT) private _doc: any,\n        @Inject(SEGMENT_CONFIG) userConfig: SegmentConfig\n    ) {\n        this._config = {...DEFAULT_CONFIG, ...userConfig};\n\n        if (this._config.loadOnInitialization && (typeof this._config.apiKey === 'undefined' || this._config.apiKey === '')) {\n            console.error('The API Key cannot be an empty string if Segment must be loaded on initialization.');\n            return;\n        }\n\n        if (\n            typeof this._w.analytics === 'undefined'\n            || typeof this._w.analytics.initialize === 'undefined'\n            || this._w.analytics.initialize === false\n        ) {\n            if (typeof this._w.analytics !== 'undefined' && this._w.analytics.invoked === true) {\n                console.error('Segment snippet included twice.');\n                return;\n            }\n\n            if (true === this._config.debug) {\n                console.log('Segment initialization...');\n            }\n\n            this._w.analytics = [];\n            this._w.analytics.invoked = true;\n\n            this._w.analytics.methods = [\n                'trackSubmit',\n                'trackClick',\n                'trackLink',\n                'trackForm',\n                'pageview',\n                'identify',\n                'reset',\n                'group',\n                'track',\n                'ready',\n                'alias',\n                'debug',\n                'page',\n                'once',\n                'off',\n                'on',\n                'addSourceMiddleware',\n                'addIntegrationMiddleware',\n                'setAnonymousId',\n                'addDestinationMiddleware',\n                'register',\n            ];\n\n            this._w.analytics.factory = (method: string) => {\n                return (...args: any[]) => {\n                    args.unshift(method);\n                    this._w.analytics.push(args);\n                    return this._w.analytics;\n                };\n            };\n\n            this._w.analytics.methods.forEach((method: string) => {\n                this._w.analytics[method] = this._w.analytics.factory(method);\n            });\n\n            this._w.analytics.load = (key: string, options: InitOptions) => {\n                const script = this._doc.createElement('script');\n                script.type = 'text/javascript';\n                script.async = true;\n                script.src = 'https://' + this._config.segmentHost + this._config.segmentUri.replace('$API_KEY$', key);\n\n                const first = this._doc.getElementsByTagName('script')[0];\n                first.parentNode.insertBefore(script, first);\n                this._w.analytics._loadOptions = options;\n            };\n\n            this._w.analytics._writeKey = this._config.apiKey;\n            this._w.analytics.SNIPPET_VERSION = '4.15.3';\n            if (this._config.loadOnInitialization) {\n                this.load(this._config.apiKey);\n            }\n        }\n    }\n\n    /**\n     * Load Segment configuration.\n     *\n     * @param apiKey Write API Key\n     * @param options Optional parameters\n     */\n    public load(apiKey: string, options?: any): void {\n        this._w.analytics.load(apiKey, options);\n        if (true === this._config.debug) {\n            console.log('Segment initialized');\n        }\n        this.debug(this._config.debug);\n    }\n\n    /**\n     * The identify method is how you associate your users and their actions to a recognizable userId and traits.\n     *\n     * @param traits A dictionary of traits you know about the user, like their email or name\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public identify(traits: any, options?: any): Promise;\n\n    /**\n     * The identify method is how you associate your users and their actions to a recognizable userId and traits.\n     *\n     * @param userId The database ID for the user.\n     * @param traits A dictionary of traits you know about the user, like their email or name\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public identify(userId: string, traits?: any, options?: any): Promise;\n    public identify(userId: string, traits?: any, options?: any): Promise {\n        return new Promise((resolve) => {\n            this._w.analytics.identify(userId, traits, options, _ => resolve(this));\n        });\n    }\n\n    /**\n     * The track method lets you record any actions your users perform.\n     *\n     * @param event The name of the event you’re tracking.\n     * @param properties A dictionary of properties for the event.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public track(event: string, properties?: any, options?: any): Promise {\n        return new Promise((resolve) => {\n            this._w.analytics.track(event, properties, options, _ => resolve(this));\n        });\n    }\n\n    /**\n     * The page method lets you record page views on your website, along with optional extra information about the page being viewed.\n     *\n     * @param name The name of the page.\n     * @param properties A dictionary of properties of the page.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public page(name?: string, properties?: any, options?: any): Promise;\n\n    /**\n     * The page method lets you record page views on your website, along with optional extra information about the page being viewed.\n     *\n     * @param category The category of the page.\n     * @param name The name of the page.\n     * @param properties A dictionary of properties of the page.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public page(category: string, name: string, properties?: any, options?: any): Promise;\n\n    /**\n     * The page method lets you record page views on your website, along with optional extra information about the page being viewed.\n     *\n     * @param category The category of the page.\n     * @param name The name of the page.\n     * @param properties A dictionary of properties of the page.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public page(category?: string, name?: string, properties?: any, options?: any): Promise {\n        return new Promise((resolve) => {\n            this._w.analytics.page(category, name, properties, options, _ => resolve(this));\n        });\n    }\n\n    /**\n     * The group method associates an identified user with a company, organization, project, workspace, team, tribe, platoon,\n     * assemblage, cluster, troop, gang, party, society or any other name you came up with for the same concept.\n     *\n     * @param groupId The Group ID to associate with the current user.\n     * @param traits A dictionary of traits for the group.\n     *\n     * @returns\n     */\n    public group(groupId: string, traits?: any): Promise {\n        return new Promise((resolve) => {\n            this._w.analytics.group(groupId, traits, _ => resolve(this));\n        });\n    }\n\n    /**\n     * The alias method combines two previously unassociated user identities.\n     *\n     * @param userId The new user ID you want to associate with the user.\n     * @param previousId The previous ID that the user was recognized by. This defaults to the currently identified user’s ID.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public alias(userId: string, previousId?: string, options?: any): Promise {\n        return new Promise((resolve) => {\n            this._w.analytics.alias(userId, previousId, options, _ => resolve(this));\n        });\n    }\n\n    /**\n     * The ready method allows you execute a promise that will be called as soon as all of your enabled destinations have loaded\n     * and analytics.js has completed initialization.\n     *\n     * @returns\n     */\n    public ready(): Promise {\n        return new Promise((resolve) => {\n            this._w.analytics.ready(_ => resolve(this));\n        });\n    }\n\n    /**\n     * Return information about the currently identified user\n     *\n     * @returns Informations about the currently identified user\n     */\n    public user(): any {\n        return this._w.analytics.user();\n    }\n\n    /**\n     * Return identifier about the currently identified user\n     *\n     * @returns Identifier about the currently identified user\n     */\n    public id(): string | null {\n        return this._w.analytics.id();\n    }\n\n    /**\n     * Override the default Anonymous ID\n     *\n     * @param anonymousId New anonymous ID\n     */\n    public setAnonymousId(anonymousId: string): void {\n        this._w.analytics.setAnonymousId(anonymousId);\n    }\n\n    /**\n     * Return traits about the currently identified user\n     *\n     * @returns Traits about the currently identified user\n     */\n    public traits(): any {\n        return this._w.analytics.user().traits();\n    }\n\n    /**\n     * Reset the id, including anonymousId, and clear traits for the currently identified user and group.\n     */\n    public reset(): void {\n        this._w.analytics.reset();\n    }\n\n    /**\n     * Turn on/off debug mode, logging helpful messages to the console.\n     *\n     * @param enabled Enable or not the debug mode\n     */\n    public debug(enabled?: boolean): void {\n        this._w.analytics.debug(enabled);\n    }\n\n    /**\n     * Set listeners for these events and run your own custom code.\n     *\n     * @param method Name of the method to listen for\n     * @param callback A function to execute after each the emitted method\n     */\n    public on(method: string, callback: (event?: string, properties?: any, options?: any) => any): void {\n        this._w.analytics.on(method, callback);\n    }\n\n    /**\n     * Attaches the `track` call as a handler to a link\n     *\n     * @param elements DOM element or an array of DOM elements to be bound with track method.\n     * @param event The name of the event, passed to the `track` method or a function that returns a string to be used\n     *              as the name of the track event.\n     * @param properties A dictionary of properties to pass with the `track` method.\n     */\n    public trackLink(elements: HTMLElement | HTMLElement[], event: string | Function, properties?: any | Function): void {\n        this._w.analytics.trackLink(elements, event, properties);\n    }\n\n    /**\n     * Binds a `track` call to a form submission.\n     *\n     * @param forms The form element to track or an array of form\n     * @param event The name of the event, passed to the `track` method.\n     * @param properties A dictionary of properties to pass with the `track` method.\n     */\n    public trackForm(forms: HTMLElement | HTMLElement[], event: string | Function, properties?: any | Function): void {\n        this._w.analytics.trackForm(forms, event, properties);\n    }\n\n    /**\n     * Set the length (in milliseconds) of the callbacks and helper functions\n     *\n     * @param timeout Number of milliseconds\n     */\n    public timeout(timeout: number): void {\n        this._w.analytics.timeout(timeout);\n    }\n\n    /**\n     * Add a source middleware called on events\n     *\n     * @param middleware Custom function\n     */\n    public addSourceMiddleware(middleware: SourceMiddleware): void {\n        this._w.analytics.addSourceMiddleware(middleware);\n    }\n\n    /**\n     * Add destination middlewares called on events\n     *\n     * @param integration Integration name\n     * @param middlewares Custom functions\n     */\n    public addDestinationMiddleware(integration: string, ...middlewares: DestinationMiddleware[]): void {\n        this._w.analytics.addDestinationMiddleware(integration, ...middlewares);\n    }\n\n    /**\n     * Register plugins\n     *\n     * @param plugins\n     */\n    public register(...plugins: NewSegmentPlugin[]): Promise {\n        return this._w.analytics.register(...plugins);\n    }\n\n    /**\n     * Get registered plugins\n     *\n     * @deprecated This is being deprecated and will be not be available in future releases of Analytics JS\n     */\n    public get plugins(): { [pluginName: string]: SegmentPlugin } {\n        return this._w.analytics.plugins;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WindowWrapper.html":{"url":"injectables/WindowWrapper.html","title":"injectable - WindowWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WindowWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/window-wrapper.ts\n        \n\n\n            \n                Description\n            \n            \n                Window Wrapper for Angular AOT\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                analytics\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        analytics\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/window-wrapper.ts:9\n                        \n                    \n\n            \n                \n                    Segment Analytics.js instance\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\n/**\n * Window Wrapper for Angular AOT\n */\n@Injectable()\nexport class WindowWrapper {\n    /** Segment Analytics.js instance */\n    public analytics: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/ngx-segment-analytics.config.ts\n            \n            interface\n            SegmentConfig\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/ngx-segment-analytics.config.ts\n            \n            variable\n            DEFAULT_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ngx-segment-analytics.config.ts\n            \n            variable\n            SEGMENT_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/ngx-segment-analytics.module.ts\n            \n            function\n            getWindow\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/ngx-segment-analytics.service.ts\n            \n            injectable\n            SegmentService\n            \n                85 %\n                (23/27)\n            \n        \n        \n            \n                \n                src/ngx-segment-analytics.service.ts\n            \n            interface\n            SegmentPlugin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/window-wrapper.ts\n            \n            injectable\n            WindowWrapper\n            \n                100 %\n                (2/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getWindow   (src/.../ngx-segment-analytics.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/ngx-segment-analytics.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getWindow\n                        \n                    \n                \n            \n            \n                \ngetWindow(platformId: any)\n                \n            \n\n\n\n\n            \n                \n                        Window Provider for Angular AOT\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                platformId\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngx-segment-analytics\n\n\n\n\n\n\nThis Angular module provides an API for Segment using the analytics.js official library.\nCompatible with Angular AOT and Universal.\nInstallation\nTo install this library, run:\nExample :$ npm install --save ngx-segment-analyticsConsuming Segment\nAdd the SegmentModule to your Angular AppModule:\nExample :import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n// Import the Segment module\nimport { SegmentModule } from 'ngx-segment-analytics';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    // Segment Importation\n    SegmentModule.forRoot({ apiKey: 'YOUR_WRITE_APIKEY', debug: true, loadOnInitialization: true })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }You can use the SegmentService in any constructor as a injected service :\nExample :import { Component, OnInit } from '@angular/core';\nimport { SegmentService } from 'ngx-segment-analytics';\n@Component({\n    selector: 'hero',\n    templateUrl: './hero.component.html',\n    styleUrls: ['./hero.component.css']\n})\nexport class HeroComponent implements OnInit {\n\n    constructor(private segment: SegmentService) { }\n\n    public ngOnInit() {\n        this.segment.track('load an hero')\n            .then(() => console.log(\"Event sended\"));\n    }\n\n}Documentation\nA full documentation is available here\nAPI\nThis API is compatible with analytics.js but returns Promises instead of taking callbacks in parameters.\nExample :load(apiKey: string, options: any);\nget plugins: {[pluginName :string]: SegmentPlugin};\nidentify(userId?: string, traits?: any, options?: any): Promise;\ntrack(event: string, properties?: any, options?: any): Promise;\npage(category?: string, name?: string, properties?: any, options?: any): Promise;\ngroup(groupId: string, traits?: any): Promise;\nalias(userId: string, previousId?: string, options?: any): Promise;\nready(): Promise;\nuser(): any;\nid(): any;\ntraits(): any;\nreset(): void;\ndebug(enabled?: boolean): void;\non(method: string, callback: (event?: string, properties?: any, options?: any) => any): void;\ntrackLink(elements: HTMLElement | HTMLElement[], event: string | Function, properties?: Object | Function): void;\ntrackForm(forms: HTMLElement | HTMLElement[], event: string | Function, properties?: Object | Function): void;\ntimeout(timeout: number): void;\naddSourceMiddleware(middleware: ({integrations, payload, next}) => void): void;Development\nTo lint all *.ts files:\nExample :$ npm run lintTo generate all *.js, *.d.ts and *.metadata.json files:\nExample :$ npm run buildTo publish on npmjs registry :\nExample :$ npm publish distLicense\nMIT ©2019 OpenDecide\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2017 OpenDecide\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        SegmentModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 17.0.0\n        \n            Keywords : angular, segment\n        \n            Bugs : https://github.com/opendecide/ngx-segment-analytics/issues\n        \n            License : MIT\n        \n            Repository : https://github.com/opendecide/ngx-segment-analytics\n        \n            Author : OpenDecide\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DestinationMiddleware   (src/.../ngx-segment-analytics.service.ts)\n                        \n                        \n                            SegmentMiddleware   (src/.../ngx-segment-analytics.service.ts)\n                        \n                        \n                            SegmentNextMiddleware   (src/.../ngx-segment-analytics.service.ts)\n                        \n                        \n                            SourceMiddleware   (src/.../ngx-segment-analytics.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/ngx-segment-analytics.service.ts\n    \n    \n        \n            \n                \n                    \n                    DestinationMiddleware\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SegmentMiddleware\n                \n            \n            \n                \n                    This type is incorrect\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SegmentNextMiddleware\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SourceMiddleware\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DEFAULT_CONFIG   (src/.../ngx-segment-analytics.config.ts)\n                        \n                        \n                            SEGMENT_CONFIG   (src/.../ngx-segment-analytics.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/ngx-segment-analytics.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SegmentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    debug: false,\n    loadOnInitialization: true, // Compatibility \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SEGMENT_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InjectionToken\n\n                    \n                \n                \n                    \n                        Default value : new InjectionToken('ngx-segment-analytics.config')\n                    \n                \n\n            \n                \n                    Segment Configuration Injection Token\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
