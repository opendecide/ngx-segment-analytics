var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/SegmentConfig.html",[0,0.925,1,0.746]],["body/interfaces/SegmentConfig.html",[0,1.273,1,1.026,2,1.174,3,0.949,4,0.949,5,0.77,6,0.62,7,0.609,8,1.174,9,1.174,10,1.807,11,0.77,12,0.882,13,2.614,14,2.658,15,3.121,16,1.931,17,2.235,18,2.322,19,3.481,20,3.481,21,2.574,22,1.023,23,0.083,24,1.669,25,2.097,26,2.747,27,2.747,28,3.481,29,3.481,30,3.481,31,2.322,32,2.097,33,2.747,34,2.097,35,2.097,36,2.658,37,2.235,38,2.808,39,2.097,40,2.747,41,2.44,42,1.094,43,2.097,44,0.77,45,1.174,46,0.949,47,1.273,48,1.475,49,1.475,50,2.747,51,0.77,52,0.77,53,1.475,54,0.949,55,0.949,56,1.475,57,0.949,58,1.475,59,0.05,60,0.05]],["title/modules/SegmentModule.html",[61,1.141,62,1.141]],["body/modules/SegmentModule.html",[1,1.212,3,1.147,4,1.147,5,0.93,6,1.005,7,0.639,9,1.903,10,1.538,13,1.903,22,0.595,23,0.083,42,1.568,44,0.93,47,0.93,51,1.247,52,0.93,54,1.147,59,0.057,60,0.057,61,2.033,62,1.854,63,1.419,64,2.335,65,2.335,66,2.391,67,2.335,68,3.131,69,1.783,70,2.335,71,3.131,72,1.419,73,1.419,74,3.533,75,2.335,76,1.903,77,3.533,78,2.697,79,3.131,80,3.131,81,2.335,82,1.538,83,1.903,84,2.335,85,1.783,86,1.147,87,2.391,88,1.147,89,1.783,90,1.419,91,2.335,92,2.335,93,1.419,94,3.533,95,1.783,96,2.335,97,2.335,98,2.335,99,2.335,100,1.783,101,1.783]],["title/interfaces/SegmentPlugin.html",[0,0.925,102,1.141]],["body/interfaces/SegmentPlugin.html",[0,0.282,1,0.526,2,0.431,3,0.348,4,0.606,5,0.282,6,0.227,7,0.354,10,0.606,12,1.222,13,1.19,15,1.694,16,0.606,18,1.19,21,2.367,22,0.499,23,0.084,24,0.749,25,1.25,31,0.431,32,0.941,34,0.541,35,1.25,36,0.541,39,1.25,41,0.541,42,0.78,44,0.282,45,0.749,46,1.196,47,0.884,51,0.282,52,0.78,54,0.348,55,0.606,57,0.348,59,0.022,60,0.022,66,0.541,72,0.431,73,2.192,76,2.006,82,0.348,83,0.431,86,0.348,87,3.184,88,1.886,89,2.628,93,0.431,95,0.941,100,0.941,102,0.606,103,0.431,104,0.709,105,0.606,106,1.637,107,2.789,108,1.637,109,0.606,110,1.233,111,1.233,112,0.709,113,0.709,114,0.709,115,0.709,116,0.995,117,1.694,118,2.458,119,0.749,120,0.941,121,0.749,122,1.958,123,0.709,124,0.709,125,1.233,126,1.233,127,0.709,128,0.709,129,1.637,130,0.709,131,0.709,132,1.233,133,1.233,134,1.637,135,1.233,136,0.709,137,0.709,138,1.233,139,1.233,140,0.709,141,1.233,142,0.709,143,0.709,144,0.709,145,0.709,146,1.958,147,0.709,148,1.958,149,3.047,150,0.709,151,0.709,152,0.709,153,0.709,154,0.709,155,1.233,156,3.557,157,1.958,158,1.637,159,1.637,160,1.233,161,1.958,162,2.716,163,3.502,164,1.233,165,1.233,166,3.128,167,0.709,168,2.458,169,0.709,170,2.22,171,0.941,172,2.618,173,0.709,174,3.025,175,1.958,176,1.958,177,0.709,178,2.006,179,0.709,180,0.709,181,0.541,182,0.709,183,3.557,184,1.637,185,1.637,186,1.637,187,1.637,188,1.958,189,1.637,190,1.637,191,0.709,192,1.958,193,0.941,194,0.709,195,1.958,196,0.709,197,2.908,198,0.709,199,0.709,200,0.709,201,0.709,202,0.709,203,0.709,204,0.709,205,0.709,206,0.709,207,0.709,208,0.709,209,0.709,210,0.709,211,0.709,212,0.709,213,0.709,214,0.709,215,0.709,216,0.709,217,0.541,218,0.709,219,0.541,220,0.709,221,0.709,222,0.709,223,0.709,224,0.709,225,0.709,226,1.25,227,0.709,228,0.709,229,0.709,230,2.773,231,0.709,232,0.541,233,0.709,234,0.941,235,0.709,236,1.233,237,1.637,238,0.709,239,1.233,240,0.709,241,0.431,242,0.709,243,0.709,244,0.709,245,0.709,246,0.941,247,0.709,248,0.709,249,0.541,250,1.233,251,1.233,252,0.709,253,0.709,254,0.709,255,0.749,256,0.541,257,0.709,258,0.709,259,0.709,260,0.709,261,0.709,262,0.709,263,0.709,264,0.709,265,0.709,266,0.541,267,0.709,268,0.709,269,0.709,270,1.637,271,0.541,272,0.709,273,0.709,274,1.25,275,1.591,276,0.709,277,0.709,278,0.541,279,0.709,280,0.709,281,1.233,282,0.709,283,0.709,284,1.233,285,1.233,286,1.233,287,1.233,288,0.709,289,1.233,290,0.709,291,1.233,292,0.541,293,0.941,294,0.709,295,0.709,296,1.637,297,0.709,298,0.709,299,0.541,300,1.233,301,0.709,302,0.941,303,1.233,304,0.541,305,0.709,306,0.709,307,1.958,308,0.709,309,0.709,310,0.709,311,0.709,312,0.709,313,0.709,314,0.709,315,0.709]],["title/injectables/WindowWrapper.html",[105,1.141,316,1.412]],["body/injectables/WindowWrapper.html",[3,1.426,4,1.426,5,1.157,7,0.524,9,1.764,11,1.157,12,1.157,22,0.918,23,0.082,42,1.436,44,1.157,45,1.764,46,1.426,47,1.157,59,0.065,60,0.065,69,2.217,86,1.426,88,1.926,105,1.771,109,1.926,241,2.19,316,2.19,317,2.217,318,2.752,319,2.217,320,3.604,321,3.604,322,2.19,323,2.752,324,3.92,325,2.904,326,3.604]],["title/coverage.html",[327,2.382]],["body/coverage.html",[0,1.371,1,0.866,5,1.075,6,1.393,7,0.63,8,2.303,22,1.017,23,0.081,51,1.075,52,1.075,55,1.326,59,0.063,60,0.063,82,1.326,102,1.326,103,2.506,105,1.691,116,1.64,119,1.64,121,1.64,219,2.894,246,2.06,316,1.64,318,2.06,319,2.06,327,2.06,328,1.64,329,2.699,330,3.79,331,2.699,332,3.442,333,4.124,334,4.124,335,2.699,336,2.699,337,2.699,338,2.699,339,2.699,340,2.699]],["title/index.html",[11,0.783,341,1.5,342,1.5]],["body/index.html",[7,0.578,12,1.131,14,1.322,16,0.851,17,1.052,18,1.052,21,2.545,23,0.083,24,1.826,31,1.052,37,1.052,38,1.322,42,1.515,44,1.011,46,0.851,47,1.011,57,1.247,59,0.046,60,0.046,61,1.247,62,1.247,72,1.052,73,1.052,76,1.052,78,1.938,82,1.476,83,2.011,85,1.322,86,1.247,88,0.851,90,1.052,93,1.052,101,1.938,102,0.851,107,1.322,109,1.476,117,1.322,118,2.904,120,1.322,149,2.811,162,2.294,168,2.811,170,1.322,171,1.322,178,1.826,181,1.322,193,1.322,217,1.322,226,1.322,232,1.322,234,1.322,241,1.542,255,1.052,266,1.322,271,2.294,274,1.322,275,2.011,278,1.322,292,1.322,293,2.526,299,1.322,302,1.322,304,1.322,322,1.826,323,1.322,328,1.542,343,1.732,344,1.732,345,1.732,346,2.538,347,2.538,348,1.732,349,1.732,350,2.538,351,3.804,352,3.309,353,1.732,354,1.732,355,2.538,356,1.732,357,1.732,358,3.005,359,1.732,360,1.322,361,1.732,362,1.732,363,1.732,364,1.322,365,1.732,366,1.732,367,2.538,368,2.538,369,1.732,370,2.538,371,1.732,372,1.732,373,1.732,374,1.732,375,1.732,376,1.732,377,1.732,378,1.732,379,1.732,380,1.732,381,1.732,382,1.732,383,1.322,384,1.732,385,1.732,386,1.732,387,1.732,388,1.732,389,1.732,390,2.538,391,1.732,392,1.732,393,1.732,394,1.732,395,1.732,396,1.938,397,1.732,398,1.732,399,1.732,400,1.732,401,1.732,402,1.732,403,1.938,404,1.732,405,1.732,406,1.732,407,1.052,408,1.732,409,1.052]],["title/license.html",[341,1.5,342,1.5,410,1.194]],["body/license.html",[23,0.061,37,2.053,59,0.061,60,0.061,178,1.593,256,2.58,328,1.593,396,2.002,403,2.002,407,2.053,409,1.593,410,1.593,411,3.739,412,2.622,413,2.622,414,3.379,415,2.622,416,2.622,417,2.622,418,2.622,419,2.622,420,2.622,421,3.379,422,4.358,423,2.622,424,2.622,425,3.739,426,2.622,427,2.622,428,2.622,429,2.622,430,2.622,431,2.622,432,2.622,433,2.622,434,2.622,435,3.379,436,2.622,437,2.622,438,2.622,439,2.622,440,2.622,441,2.622,442,2.622,443,3.379,444,3.379,445,2.622,446,2.622,447,2.622,448,2.622,449,2.622,450,2.622,451,2.622,452,2.622,453,2.622,454,2.622,455,2.622,456,2.622,457,2.622,458,2.622,459,2.622,460,2.622,461,2.622,462,2.622,463,2.622,464,2.622,465,2.622,466,2.622,467,2.622,468,2.622,469,2.622,470,2.622,471,2.622,472,2.002,473,2.622,474,2.622]],["title/modules.html",[63,1.896]],["body/modules.html",[23,0.073,59,0.073,60,0.073,62,1.72,63,2.128,383,2.673,475,3.501,476,3.501]],["title/overview.html",[477,2.382]],["body/overview.html",[2,2.027,23,0.071,59,0.071,60,0.071,61,1.926,90,2.027,255,2.027,317,2.547,360,2.547,364,2.547,472,2.547,477,2.547,478,3.336,479,3.336,480,3.336,481,3.92,482,3.336,483,3.92]],["title/properties.html",[12,0.892,484,1.965]],["body/properties.html",[7,0.599,12,1.048,23,0.082,59,0.07,60,0.07,109,1.604,322,1.984,407,1.984,409,1.984,410,1.984,485,3.265,486,3.265,487,3.265,488,3.265,489,3.87,490,3.265,491,3.265,492,3.265]],["title/miscellaneous/typealiases.html",[493,0.966,494,2.781]],["body/miscellaneous/typealiases.html",[6,1.044,7,0.619,11,1.296,22,0.829,23,0.07,59,0.07,60,0.07,103,2.589,116,2.347,119,2.347,121,2.347,275,2.503,493,1.598,495,3.253,496,3.145]],["title/miscellaneous/variables.html",[493,0.966,497,2.123]],["body/miscellaneous/variables.html",[1,0.982,6,0.982,7,0.621,8,2.437,10,1.502,11,1.218,16,1.502,17,1.858,22,0.948,23,0.081,43,2.335,48,2.335,49,2.335,51,1.482,52,1.218,53,2.335,54,1.502,55,1.828,56,2.335,57,1.502,58,2.335,59,0.068,60,0.068,249,2.841,493,1.502,496,2.841,497,2.335,498,3.721]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":333,"title":{},"body":{"coverage.html":{}}}],["0/1",{"_index":334,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":482,"title":{},"body":{"overview.html":{}}}],["1/1",{"_index":335,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":330,"title":{},"body":{"coverage.html":{}}}],["19.0.0",{"_index":486,"title":{},"body":{"properties.html":{}}}],["2",{"_index":483,"title":{},"body":{"overview.html":{}}}],["2/2",{"_index":338,"title":{},"body":{"coverage.html":{}}}],["2017",{"_index":413,"title":{},"body":{"license.html":{}}}],["2019",{"_index":408,"title":{},"body":{"index.html":{}}}],["22/27",{"_index":337,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["81",{"_index":336,"title":{},"body":{"coverage.html":{}}}],["_config",{"_index":127,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["_segmentinstance",{"_index":128,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["above",{"_index":442,"title":{},"body":{"license.html":{}}}],["accesstoken",{"_index":114,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["action",{"_index":467,"title":{},"body":{"license.html":{}}}],["actions",{"_index":159,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["add",{"_index":302,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["adddestinationmiddleware(integration",{"_index":309,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["addsourcemiddleware(middleware",{"_index":304,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["alias",{"_index":219,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"coverage.html":{}}}],["alias(userid",{"_index":232,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["aliases",{"_index":495,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":235,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["along",{"_index":186,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["already",{"_index":99,"title":{},"body":{"modules/SegmentModule.html":{}}}],["analytics",{"_index":109,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{},"properties.html":{}}}],["analytics.config",{"_index":54,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"miscellaneous/variables.html":{}}}],["analytics.config.ts",{"_index":8,"title":{},"body":{"interfaces/SegmentConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["analytics.js",{"_index":241,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["analytics.module.ts",{"_index":64,"title":{},"body":{"modules/SegmentModule.html":{}}}],["analytics.module.ts:20",{"_index":70,"title":{},"body":{"modules/SegmentModule.html":{}}}],["analytics.service",{"_index":84,"title":{},"body":{"modules/SegmentModule.html":{}}}],["analytics.service.ts",{"_index":103,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["analytics/issues",{"_index":490,"title":{},"body":{"properties.html":{}}}],["analyticsbrowser",{"_index":106,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["analyticsbrowsersettings",{"_index":108,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["analyticsconsuming",{"_index":354,"title":{},"body":{"index.html":{}}}],["analyticssnippet",{"_index":324,"title":{},"body":{"injectables/WindowWrapper.html":{}}}],["and/or",{"_index":433,"title":{},"body":{"license.html":{}}}],["angular",{"_index":322,"title":{},"body":{"injectables/WindowWrapper.html":{},"index.html":{},"properties.html":{}}}],["angular/common",{"_index":81,"title":{},"body":{"modules/SegmentModule.html":{}}}],["angular/core",{"_index":44,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["angular/platform",{"_index":356,"title":{},"body":{"index.html":{}}}],["anonymous",{"_index":250,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["anonymousid",{"_index":251,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["aot",{"_index":323,"title":{},"body":{"injectables/WindowWrapper.html":{},"index.html":{}}}],["api",{"_index":24,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["apikey",{"_index":14,"title":{},"body":{"interfaces/SegmentConfig.html":{},"index.html":{}}}],["app.component",{"_index":359,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":358,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":101,"title":{},"body":{"modules/SegmentModule.html":{},"index.html":{}}}],["arising",{"_index":471,"title":{},"body":{"license.html":{}}}],["array",{"_index":287,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["assemblage",{"_index":205,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["associate",{"_index":157,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["associated",{"_index":423,"title":{},"body":{"license.html":{}}}],["associates",{"_index":196,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["async",{"_index":166,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["attaches",{"_index":280,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["author",{"_index":492,"title":{},"body":{"properties.html":{}}}],["authors",{"_index":460,"title":{},"body":{"license.html":{}}}],["available",{"_index":383,"title":{},"body":{"index.html":{},"modules.html":{}}}],["await",{"_index":172,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["being",{"_index":189,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["binds",{"_index":295,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["boolean",{"_index":31,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["bootstrap",{"_index":364,"title":{},"body":{"index.html":{},"overview.html":{}}}],["bound",{"_index":288,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["browse",{"_index":476,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":357,"title":{},"body":{"index.html":{}}}],["browsermodule",{"_index":355,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":488,"title":{},"body":{"properties.html":{}}}],["buildto",{"_index":402,"title":{},"body":{"index.html":{}}}],["c",{"_index":412,"title":{},"body":{"license.html":{}}}],["call",{"_index":281,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["callback",{"_index":274,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["callbacks",{"_index":387,"title":{},"body":{"index.html":{}}}],["called",{"_index":237,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["came",{"_index":211,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["category",{"_index":192,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["cdn",{"_index":27,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["cdnurl",{"_index":15,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["charge",{"_index":418,"title":{},"body":{"license.html":{}}}],["claim",{"_index":463,"title":{},"body":{"license.html":{}}}],["class",{"_index":86,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["clear",{"_index":257,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["cluster",{"_index":206,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["code",{"_index":272,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["combines",{"_index":220,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["commonmodule",{"_index":80,"title":{},"body":{"modules/SegmentModule.html":{}}}],["company",{"_index":198,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["compatibility",{"_index":58,"title":{},"body":{"interfaces/SegmentConfig.html":{},"miscellaneous/variables.html":{}}}],["compatible",{"_index":347,"title":{},"body":{"index.html":{}}}],["completed",{"_index":242,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["component",{"_index":367,"title":{},"body":{"index.html":{}}}],["concept",{"_index":214,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["conditions",{"_index":441,"title":{},"body":{"license.html":{}}}],["config",{"_index":74,"title":{},"body":{"modules/SegmentModule.html":{}}}],["configuration",{"_index":10,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"miscellaneous/variables.html":{}}}],["connection",{"_index":473,"title":{},"body":{"license.html":{}}}],["console",{"_index":264,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["console.error('the",{"_index":136,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["console.log(\"event",{"_index":380,"title":{},"body":{"index.html":{}}}],["console.log('segment",{"_index":139,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["const",{"_index":50,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["constructor",{"_index":93,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["constructor(@optional",{"_index":96,"title":{},"body":{"modules/SegmentModule.html":{}}}],["constructor(private",{"_index":377,"title":{},"body":{"index.html":{}}}],["contract",{"_index":468,"title":{},"body":{"license.html":{}}}],["copies",{"_index":435,"title":{},"body":{"license.html":{}}}],["copy",{"_index":421,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":411,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":327,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current",{"_index":216,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["currently",{"_index":230,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["custom",{"_index":39,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["d.ts",{"_index":400,"title":{},"body":{"index.html":{}}}],["damages",{"_index":464,"title":{},"body":{"license.html":{}}}],["database",{"_index":169,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["deal",{"_index":424,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":474,"title":{},"body":{"license.html":{}}}],["debug",{"_index":16,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["debug(enabled",{"_index":266,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["declarations",{"_index":360,"title":{},"body":{"index.html":{},"overview.html":{}}}],["default",{"_index":249,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"miscellaneous/variables.html":{}}}],["default_config",{"_index":55,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":229,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["defined",{"_index":69,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["dependencies",{"_index":478,"title":{},"body":{"overview.html":{}}}],["deprecated",{"_index":41,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["description",{"_index":9,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["destination",{"_index":306,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["destinationmiddleware",{"_index":121,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["destinations",{"_index":240,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["dictionary",{"_index":163,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["distlicense",{"_index":406,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":431,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":328,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":285,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["each",{"_index":276,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["element",{"_index":286,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["elements",{"_index":284,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["email",{"_index":165,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["emitted",{"_index":277,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["empty",{"_index":137,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["enable",{"_index":265,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["enabled",{"_index":239,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["error('segmentmodule",{"_index":98,"title":{},"body":{"modules/SegmentModule.html":{}}}],["event",{"_index":178,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{},"license.html":{}}}],["events",{"_index":270,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["example",{"_index":351,"title":{},"body":{"index.html":{}}}],["execute",{"_index":236,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["export",{"_index":47,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["exports",{"_index":480,"title":{},"body":{"overview.html":{}}}],["express",{"_index":451,"title":{},"body":{"license.html":{}}}],["extra",{"_index":187,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["false",{"_index":56,"title":{},"body":{"interfaces/SegmentConfig.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{}}}],["files",{"_index":396,"title":{},"body":{"index.html":{},"license.html":{}}}],["fitness",{"_index":456,"title":{},"body":{"license.html":{}}}],["following",{"_index":440,"title":{},"body":{"license.html":{}}}],["form",{"_index":296,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["forms",{"_index":298,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["forroot",{"_index":67,"title":{},"body":{"modules/SegmentModule.html":{}}}],["forroot(config",{"_index":68,"title":{},"body":{"modules/SegmentModule.html":{}}}],["free",{"_index":417,"title":{},"body":{"license.html":{}}}],["full",{"_index":382,"title":{},"body":{"index.html":{}}}],["function",{"_index":275,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":308,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["furnished",{"_index":438,"title":{},"body":{"license.html":{}}}],["gang",{"_index":208,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["generate",{"_index":398,"title":{},"body":{"index.html":{}}}],["getting",{"_index":341,"title":{"index.html":{},"license.html":{}},"body":{}}],["granted",{"_index":416,"title":{},"body":{"license.html":{}}}],["graph",{"_index":475,"title":{},"body":{"modules.html":{}}}],["group",{"_index":195,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["group(groupid",{"_index":217,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["groupid",{"_index":215,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["handler",{"_index":282,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["helpful",{"_index":262,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["here",{"_index":384,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":415,"title":{},"body":{"license.html":{}}}],["hero",{"_index":370,"title":{},"body":{"index.html":{}}}],["hero.component.css",{"_index":374,"title":{},"body":{"index.html":{}}}],["hero.component.html",{"_index":372,"title":{},"body":{"index.html":{}}}],["herocomponent",{"_index":375,"title":{},"body":{"index.html":{}}}],["holders",{"_index":461,"title":{},"body":{"license.html":{}}}],["host",{"_index":28,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["htmlelement",{"_index":293,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["htmlformelement",{"_index":300,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["https",{"_index":143,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["https://github.com/opendecide/ngx",{"_index":489,"title":{},"body":{"properties.html":{}}}],["id",{"_index":170,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["identified",{"_index":197,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["identifier",{"_index":246,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"coverage.html":{}}}],["identify",{"_index":155,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["identify(traits",{"_index":167,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["identify(userid",{"_index":171,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["identities",{"_index":224,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["implements",{"_index":376,"title":{},"body":{"index.html":{}}}],["implied",{"_index":452,"title":{},"body":{"license.html":{}}}],["import",{"_index":42,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["importation",{"_index":361,"title":{},"body":{"index.html":{}}}],["imports",{"_index":85,"title":{},"body":{"modules/SegmentModule.html":{},"index.html":{}}}],["included",{"_index":445,"title":{},"body":{"license.html":{}}}],["including",{"_index":256,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"license.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"interfaces/SegmentConfig.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{}}}],["information",{"_index":188,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["informations",{"_index":244,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["initialisation",{"_index":71,"title":{},"body":{"modules/SegmentModule.html":{}}}],["initialization",{"_index":35,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["initialized",{"_index":153,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["initoptions",{"_index":110,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["inject",{"_index":104,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["inject(segment_config",{"_index":130,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["injectable",{"_index":105,"title":{"injectables/WindowWrapper.html":{}},"body":{"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{}}}],["injectables",{"_index":317,"title":{},"body":{"injectables/WindowWrapper.html":{},"overview.html":{}}}],["injected",{"_index":365,"title":{},"body":{"index.html":{}}}],["injection",{"_index":48,"title":{},"body":{"interfaces/SegmentConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":43,"title":{},"body":{"interfaces/SegmentConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('ngx",{"_index":53,"title":{},"body":{"interfaces/SegmentConfig.html":{},"miscellaneous/variables.html":{}}}],["install",{"_index":350,"title":{},"body":{"index.html":{}}}],["installation",{"_index":349,"title":{},"body":{"index.html":{}}}],["instance",{"_index":326,"title":{},"body":{"injectables/WindowWrapper.html":{}}}],["instead",{"_index":38,"title":{},"body":{"interfaces/SegmentConfig.html":{},"index.html":{}}}],["integration",{"_index":122,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["integrations",{"_index":120,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"overview.html":{}}}],["js",{"_index":399,"title":{},"body":{"index.html":{}}}],["key",{"_index":25,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["keywords",{"_index":487,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":450,"title":{},"body":{"license.html":{}}}],["know",{"_index":164,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["legend",{"_index":479,"title":{},"body":{"overview.html":{}}}],["lets",{"_index":175,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["liability",{"_index":465,"title":{},"body":{"license.html":{}}}],["liable",{"_index":462,"title":{},"body":{"license.html":{}}}],["library",{"_index":346,"title":{},"body":{"index.html":{}}}],["license",{"_index":410,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["limitation",{"_index":427,"title":{},"body":{"license.html":{}}}],["limited",{"_index":453,"title":{},"body":{"license.html":{}}}],["link",{"_index":283,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["lint",{"_index":394,"title":{},"body":{"index.html":{}}}],["lintto",{"_index":397,"title":{},"body":{"index.html":{}}}],["listen",{"_index":273,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["listeners",{"_index":269,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["load",{"_index":34,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["load(apikey",{"_index":388,"title":{},"body":{"index.html":{}}}],["load(settingsorapikey",{"_index":150,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["loaded",{"_index":100,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{}}}],["loadoninitialization",{"_index":17,"title":{},"body":{"interfaces/SegmentConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["logging",{"_index":261,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["matching",{"_index":60,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":455,"title":{},"body":{"license.html":{}}}],["merge",{"_index":430,"title":{},"body":{"license.html":{}}}],["messages",{"_index":263,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["metadata.json",{"_index":401,"title":{},"body":{"index.html":{}}}],["method",{"_index":156,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["methods",{"_index":65,"title":{},"body":{"modules/SegmentModule.html":{}}}],["middleware",{"_index":303,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["middlewares",{"_index":307,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["miscellaneous",{"_index":493,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":407,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mode",{"_index":32,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["modify",{"_index":429,"title":{},"body":{"license.html":{}}}],["module",{"_index":61,"title":{"modules/SegmentModule.html":{}},"body":{"modules/SegmentModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":63,"title":{"modules.html":{}},"body":{"modules/SegmentModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":77,"title":{},"body":{"modules/SegmentModule.html":{}}}],["name",{"_index":73,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["new",{"_index":52,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["new(player",{"_index":113,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["newsegmentplugin",{"_index":111,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["next",{"_index":46,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["ngmodule",{"_index":78,"title":{},"body":{"modules/SegmentModule.html":{},"index.html":{}}}],["ngoninit",{"_index":378,"title":{},"body":{"index.html":{}}}],["ngx",{"_index":83,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["noninfringement",{"_index":459,"title":{},"body":{"license.html":{}}}],["notice",{"_index":443,"title":{},"body":{"license.html":{}}}],["npm",{"_index":352,"title":{},"body":{"index.html":{}}}],["npmjs",{"_index":404,"title":{},"body":{"index.html":{}}}],["null",{"_index":95,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{}}}],["number",{"_index":392,"title":{},"body":{"index.html":{}}}],["object",{"_index":390,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":420,"title":{},"body":{"license.html":{}}}],["official",{"_index":345,"title":{},"body":{"index.html":{}}}],["on(method",{"_index":278,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["on/off",{"_index":260,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["oninit",{"_index":368,"title":{},"body":{"index.html":{}}}],["opendecide",{"_index":409,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["option",{"_index":142,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["optional",{"_index":13,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{}}}],["options",{"_index":149,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["organization",{"_index":199,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["others",{"_index":115,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["otherwise",{"_index":470,"title":{},"body":{"license.html":{}}}],["out",{"_index":472,"title":{},"body":{"license.html":{},"overview.html":{}}}],["override",{"_index":248,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["overview",{"_index":477,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":484,"title":{"properties.html":{}},"body":{}}],["page",{"_index":183,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["page(category",{"_index":193,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["page(name",{"_index":191,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["param",{"_index":87,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{}}}],["parameters",{"_index":72,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["parentmodule",{"_index":94,"title":{},"body":{"modules/SegmentModule.html":{}}}],["particular",{"_index":457,"title":{},"body":{"license.html":{}}}],["party",{"_index":209,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["pass",{"_index":291,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["passed",{"_index":289,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["payload",{"_index":117,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["perform",{"_index":177,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["permission",{"_index":414,"title":{},"body":{"license.html":{}}}],["permit",{"_index":436,"title":{},"body":{"license.html":{}}}],["person",{"_index":419,"title":{},"body":{"license.html":{}}}],["persons",{"_index":437,"title":{},"body":{"license.html":{}}}],["platoon",{"_index":204,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["plugin",{"_index":36,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["pluginname",{"_index":389,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":18,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["portions",{"_index":447,"title":{},"body":{"license.html":{}}}],["previous",{"_index":227,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["previousid",{"_index":226,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["previously",{"_index":222,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["project",{"_index":200,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["promise",{"_index":168,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["promises",{"_index":385,"title":{},"body":{"index.html":{}}}],["properties",{"_index":12,"title":{"properties.html":{}},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{},"properties.html":{}}}],["protected",{"_index":125,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["provide",{"_index":91,"title":{},"body":{"modules/SegmentModule.html":{}}}],["provided",{"_index":448,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":123,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["providers",{"_index":90,"title":{},"body":{"modules/SegmentModule.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":343,"title":{},"body":{"index.html":{}}}],["proxied",{"_index":30,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["public",{"_index":88,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["publish",{"_index":403,"title":{},"body":{"index.html":{},"license.html":{}}}],["purpose",{"_index":458,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":126,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["ready",{"_index":234,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["recognizable",{"_index":160,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["recognized",{"_index":228,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["record",{"_index":176,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["register",{"_index":311,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["register(...plugins",{"_index":312,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["registry",{"_index":405,"title":{},"body":{"index.html":{}}}],["repository",{"_index":491,"title":{},"body":{"properties.html":{}}}],["requests",{"_index":29,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["reset",{"_index":255,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{},"overview.html":{}}}],["restriction",{"_index":426,"title":{},"body":{"license.html":{}}}],["results",{"_index":59,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":89,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{}}}],["returns",{"_index":76,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["rights",{"_index":428,"title":{},"body":{"license.html":{}}}],["root",{"_index":124,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["run",{"_index":271,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["same",{"_index":213,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["save",{"_index":353,"title":{},"body":{"index.html":{}}}],["segment",{"_index":7,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["segment.io",{"_index":26,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["segment/analytics",{"_index":45,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{}}}],["segment_config",{"_index":51,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["segmentconfig",{"_index":1,"title":{"interfaces/SegmentConfig.html":{}},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["segmenthost",{"_index":19,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["segmentinstance",{"_index":314,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentmodule",{"_index":62,"title":{"modules/SegmentModule.html":{}},"body":{"modules/SegmentModule.html":{},"index.html":{},"modules.html":{}}}],["segmentmodule.forroot",{"_index":362,"title":{},"body":{"index.html":{}}}],["segmentnextmiddleware",{"_index":116,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["segmentplugin",{"_index":102,"title":{"interfaces/SegmentPlugin.html":{}},"body":{"interfaces/SegmentPlugin.html":{},"coverage.html":{},"index.html":{}}}],["segmentservice",{"_index":82,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"index.html":{}}}],["segmentservice._segmentinstance.adddestinationmiddleware(integration",{"_index":310,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.addsourcemiddleware(middleware",{"_index":305,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.alias(userid",{"_index":233,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.debug(enabled",{"_index":267,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.group(groupid",{"_index":218,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.identify(userid",{"_index":173,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.instance",{"_index":315,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.instance.user",{"_index":245,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.instance?.initialized",{"_index":140,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.load(settings",{"_index":152,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.on(method",{"_index":279,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.page(category",{"_index":194,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.ready",{"_index":243,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.register(...plugins",{"_index":313,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.reset",{"_index":258,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.setanonymousid(anonymousid",{"_index":253,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.track(event",{"_index":182,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.tracklink(elements",{"_index":294,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.tracksubmit(forms",{"_index":301,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmenturi",{"_index":20,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["selector",{"_index":369,"title":{},"body":{"index.html":{}}}],["sell",{"_index":434,"title":{},"body":{"license.html":{}}}],["sended",{"_index":381,"title":{},"body":{"index.html":{}}}],["service",{"_index":366,"title":{},"body":{"index.html":{}}}],["set",{"_index":268,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["setanonymousid(anonymousid",{"_index":252,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["settings",{"_index":148,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["settingsorapikey",{"_index":146,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["shall",{"_index":444,"title":{},"body":{"license.html":{}}}],["skipself",{"_index":79,"title":{},"body":{"modules/SegmentModule.html":{}}}],["society",{"_index":210,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["software",{"_index":422,"title":{},"body":{"license.html":{}}}],["soon",{"_index":238,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{}}}],["sourcemiddleware",{"_index":119,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../ngx",{"_index":496,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/ngx",{"_index":6,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/window",{"_index":318,"title":{},"body":{"injectables/WindowWrapper.html":{},"coverage.html":{}}}],["started",{"_index":342,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":329,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":66,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{}}}],["status",{"_index":33,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["string",{"_index":21,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["styleurls",{"_index":373,"title":{},"body":{"index.html":{}}}],["subject",{"_index":439,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":432,"title":{},"body":{"license.html":{}}}],["submission",{"_index":297,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["substantial",{"_index":446,"title":{},"body":{"license.html":{}}}],["table",{"_index":340,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":339,"title":{},"body":{"coverage.html":{}}}],["taking",{"_index":386,"title":{},"body":{"index.html":{}}}],["team",{"_index":202,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["templateurl",{"_index":371,"title":{},"body":{"index.html":{}}}],["this._config",{"_index":131,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._config.apikey",{"_index":134,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._config.cdnurl",{"_index":144,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._config.debug",{"_index":138,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._config.loadoninitialization",{"_index":132,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._config.segmenthost",{"_index":141,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.debug(this._config.debug",{"_index":154,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.load({writekey",{"_index":145,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.segment.track('load",{"_index":379,"title":{},"body":{"index.html":{}}}],["this.user()?.id",{"_index":247,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.user()?.traits",{"_index":254,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["throw",{"_index":97,"title":{},"body":{"modules/SegmentModule.html":{}}}],["timeout(timeout",{"_index":391,"title":{},"body":{"index.html":{}}}],["token",{"_index":49,"title":{},"body":{"interfaces/SegmentConfig.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":469,"title":{},"body":{"license.html":{}}}],["track",{"_index":174,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["track(event",{"_index":181,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["trackform(forms",{"_index":299,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["tracking",{"_index":180,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["tracklink(elements",{"_index":292,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["traits",{"_index":162,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["tribe",{"_index":203,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["troop",{"_index":207,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["true",{"_index":57,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":395,"title":{},"body":{"index.html":{}}}],["turn",{"_index":259,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["two",{"_index":221,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["type",{"_index":22,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":494,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":133,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["unassociated",{"_index":223,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["undefined",{"_index":135,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["universal",{"_index":348,"title":{},"body":{"index.html":{}}}],["up",{"_index":212,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["uri",{"_index":40,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["use",{"_index":37,"title":{},"body":{"interfaces/SegmentConfig.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":290,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["user",{"_index":107,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["userconfig",{"_index":129,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["userid",{"_index":161,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["users",{"_index":158,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["user’s",{"_index":231,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["usevalue",{"_index":92,"title":{},"body":{"modules/SegmentModule.html":{}}}],["using",{"_index":344,"title":{},"body":{"index.html":{}}}],["value",{"_index":498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":332,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":497,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":485,"title":{},"body":{"properties.html":{}}}],["video",{"_index":112,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["viewed",{"_index":190,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["views",{"_index":184,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["void",{"_index":118,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["void;development",{"_index":393,"title":{},"body":{"index.html":{}}}],["want",{"_index":225,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["warranties",{"_index":454,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":449,"title":{},"body":{"license.html":{}}}],["website",{"_index":185,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["whether",{"_index":466,"title":{},"body":{"license.html":{}}}],["window",{"_index":320,"title":{},"body":{"injectables/WindowWrapper.html":{}}}],["windowwrapper",{"_index":316,"title":{"injectables/WindowWrapper.html":{}},"body":{"injectables/WindowWrapper.html":{},"coverage.html":{}}}],["without",{"_index":425,"title":{},"body":{"license.html":{}}}],["workspace",{"_index":201,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["wrapper",{"_index":321,"title":{},"body":{"injectables/WindowWrapper.html":{}}}],["wrapper.ts",{"_index":319,"title":{},"body":{"injectables/WindowWrapper.html":{},"coverage.html":{}}}],["wrapper.ts:10",{"_index":325,"title":{},"body":{"injectables/WindowWrapper.html":{}}}],["write",{"_index":147,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["writekey",{"_index":151,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["yes",{"_index":75,"title":{},"body":{"modules/SegmentModule.html":{}}}],["your_write_apikey",{"_index":363,"title":{},"body":{"index.html":{}}}],["you’re",{"_index":179,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["zoom",{"_index":481,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/SegmentConfig.html":{"url":"interfaces/SegmentConfig.html","title":"interface - SegmentConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SegmentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-segment-analytics.config.ts\n        \n\n\n            \n                Description\n            \n            \n                Segment Configuration Interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            apiKey\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cdnURL\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            debug\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            loadOnInitialization\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            plugins\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            segmentHost\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            segmentUri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apiKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    API Key for Segment.io\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cdnURL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cdnURL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    CDN host if requests are proxied\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        debug:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Debug mode status\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadOnInitialization\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loadOnInitialization:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Load Segment configuration on initialization\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plugins\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plugins:     Plugin[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Plugin[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Plugins\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        segmentHost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Use cdnURL instead.\n                                    \n                                \n                                \n                                    \n                                        segmentHost:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Segment Host if requests are proxied\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        segmentUri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Use cdnURL instead.\n                                    \n                                \n                                \n                                    \n                                        segmentUri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                     Segment Custom URI\n @deprecated Use cdnURL instead.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {InjectionToken} from '@angular/core';\nimport type {Plugin} from '@segment/analytics-next';\n\n/**\n * Segment Configuration Interface\n */\nexport interface SegmentConfig {\n    /** API Key for Segment.io */\n    apiKey?: string;\n    /** Debug mode status */\n    debug?: boolean;\n    /** Load Segment configuration on initialization */\n    loadOnInitialization?: boolean;\n    /**\n     * Segment Host if requests are proxied\n     * @deprecated Use cdnURL instead.\n     **/\n    segmentHost?: string;\n    /**\n     *  Segment Custom URI\n     *  @deprecated Use cdnURL instead.\n     **/\n    segmentUri?: string;\n    /** CDN host if requests are proxied */\n    cdnURL?: string;\n    /** Plugins **/\n    plugins?: Plugin[];\n}\n\n/** Segment Configuration Injection Token */\nexport const SEGMENT_CONFIG: InjectionToken = new InjectionToken('ngx-segment-analytics.config');\n\nexport const DEFAULT_CONFIG: SegmentConfig = {\n    debug: false,\n    loadOnInitialization: true, // Compatibility \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SegmentModule.html":{"url":"modules/SegmentModule.html","title":"module - SegmentModule","body":"\n                   \n\n\n\n\n    Modules\n    SegmentModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/ngx-segment-analytics.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Segment Module\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(config?: SegmentConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/ngx-segment-analytics.module.ts:20\n                        \n                    \n\n\n            \n                \n                        Segment Module Initialisation\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                            SegmentConfig\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Segment Configuration\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ModuleWithProviders\n\n                        \n                            \n                                Segment Module\n\n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import {ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SegmentService} from './ngx-segment-analytics.service';\nimport {SEGMENT_CONFIG, SegmentConfig} from './ngx-segment-analytics.config';\n\n/**\n * Segment Module\n */\n@NgModule({\n    imports: [CommonModule],\n})\nexport class SegmentModule {\n\n    /**\n     * Segment Module Initialisation\n     *\n     * @param config Segment Configuration\n     * @returns Segment Module\n     */\n    public static forRoot(config?: SegmentConfig): ModuleWithProviders {\n        return {\n            ngModule: SegmentModule,\n            providers: [\n                {provide: SEGMENT_CONFIG, useValue: config},\n                SegmentService,\n            ],\n        };\n    }\n\n    /**\n     * Segment Module Constructor\n     *\n     * @param parentModule Must be null\n     */\n    constructor(@Optional() @SkipSelf() parentModule: SegmentModule) {\n        if (parentModule) {\n            throw new Error('SegmentModule is already loaded. Import it in the AppModule only');\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SegmentPlugin.html":{"url":"interfaces/SegmentPlugin.html","title":"interface - SegmentPlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SegmentPlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-segment-analytics.service.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Inject, Injectable} from '@angular/core';\nimport {DEFAULT_CONFIG, SEGMENT_CONFIG, SegmentConfig} from './ngx-segment-analytics.config';\nimport {AnalyticsBrowser} from '@segment/analytics-next';\nimport type {User, AnalyticsBrowserSettings, Analytics, InitOptions, Plugin as NewSegmentPlugin} from '@segment/analytics-next';\n\nexport interface SegmentPlugin {\n    // Video Plugins\n    new(player: any, accessToken: string): any;\n\n    // Others plugins\n    new(): any;\n}\n\nexport type SegmentNextMiddleware = (payload: any) => void;\nexport type SourceMiddleware = ({integrations, payload, next}: {\n    integrations: { [key: string]: any },\n    payload: any,\n    next: SegmentNextMiddleware,\n}) => void;\nexport type DestinationMiddleware = ({integration, payload, next}: {\n    integration: string,\n    payload: any,\n    next: SegmentNextMiddleware,\n}) => void;\n\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SegmentService {\n\n    protected readonly _config: SegmentConfig;\n    protected static readonly _segmentInstance: AnalyticsBrowser = new AnalyticsBrowser();\n\n    /**\n     * @param userConfig Segment configuration\n     */\n    constructor(\n        @Inject(SEGMENT_CONFIG) userConfig: SegmentConfig\n    ) {\n        this._config = {...DEFAULT_CONFIG, ...userConfig};\n\n        if (this._config.loadOnInitialization && (typeof this._config.apiKey === 'undefined' || this._config.apiKey === '')) {\n            console.error('The API Key cannot be an empty string if Segment must be loaded on initialization.');\n            return;\n        }\n\n        if (true === this._config.debug) {\n            console.log('Segment initialization...');\n        }\n\n        if (this._config.loadOnInitialization && !SegmentService._segmentInstance.instance?.initialized) {\n            let cdnUrl: string | undefined;\n            \n            if (this._config.segmentHost) {\n                // Deprecated option\n                cdnUrl = 'https://' + this._config.segmentHost;\n            } else {\n                cdnUrl = this._config.cdnURL;\n            }\n\n            this.load({writeKey: this._config.apiKey, cdnURL: cdnUrl});\n        }\n    }\n\n    /**\n     * Load Segment configuration.\n     *\n     * @param settingsOrApiKey Write API Key or Segment settings.\n     * @param options Optional parameters.\n     */\n    public load(settingsOrApiKey: AnalyticsBrowserSettings | string, options: InitOptions = {}): void {\n        let settings: AnalyticsBrowserSettings;\n        if (typeof settingsOrApiKey === 'string') {\n            settings = {writeKey: settingsOrApiKey};\n        } else {\n            settings = settingsOrApiKey;\n        }\n\n        SegmentService._segmentInstance.load(settings, options)\n            .then(() => {\n                if (this._config.debug) {\n                    console.log('Segment initialized');\n                }\n            });\n\n        this.debug(this._config.debug);\n    }\n\n    /**\n     * The identify method is how you associate your users and their actions to a recognizable userId and traits.\n     *\n     * @param traits A dictionary of traits you know about the user, like their email or name.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public async identify(traits: any, options?: any): Promise;\n\n    /**\n     * The identify method is how you associate your users and their actions to a recognizable userId and traits.\n     *\n     * @param userId The database ID for the user.\n     * @param traits A dictionary of traits you know about the user, like their email or name.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public async identify(userId: string, traits?: any, options?: any): Promise;\n    public async identify(userId: string, traits?: any, options?: any): Promise {\n        await SegmentService._segmentInstance.identify(userId, traits, options);\n\n        return this;\n    }\n\n    /**\n     * The track method lets you record any actions your users perform.\n     *\n     * @param event The name of the event you’re tracking.\n     * @param properties A dictionary of properties for the event.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public async track(event: string, properties?: any, options?: any): Promise {\n        await SegmentService._segmentInstance.track(event, properties, options);\n\n        return this;\n    }\n\n    /**\n     * The page method lets you record page views on your website, along with optional extra information about the page being viewed.\n     *\n     * @param name The name of the page.\n     * @param properties A dictionary of properties of the page.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public async page(name?: string, properties?: any, options?: any): Promise;\n\n    /**\n     * The page method lets you record page views on your website, along with optional extra information about the page being viewed.\n     *\n     * @param category The category of the page.\n     * @param name The name of the page.\n     * @param properties A dictionary of properties of the page.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public async page(category: string, name: string, properties?: any, options?: any): Promise;\n\n    /**\n     * The page method lets you record page views on your website, along with optional extra information about the page being viewed.\n     *\n     * @param category The category of the page.\n     * @param name The name of the page.\n     * @param properties A dictionary of properties of the page.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public async page(category?: string, name?: string, properties?: any, options?: any): Promise {\n        await SegmentService._segmentInstance.page(category, name, properties, options);\n\n        return this;\n    }\n\n    /**\n     * The group method associates an identified user with a company, organization, project, workspace, team, tribe, platoon,\n     * assemblage, cluster, troop, gang, party, society or any other name you came up with for the same concept.\n     *\n     * @param groupId The Group ID to associate with the current user.\n     * @param traits A dictionary of traits for the group.\n     *\n     * @returns\n     */\n    public async group(groupId: string, traits?: any): Promise {\n        await SegmentService._segmentInstance.group(groupId, traits);\n\n        return this;\n    }\n\n    /**\n     * The alias method combines two previously unassociated user identities.\n     *\n     * @param userId The new user ID you want to associate with the user.\n     * @param previousId The previous ID that the user was recognized by. This defaults to the currently identified user’s ID.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public async alias(userId: string, previousId?: string, options?: any): Promise {\n        await SegmentService._segmentInstance.alias(userId, previousId, options);\n\n        return this;\n    }\n\n    /**\n     * The ready method allows you execute a promise that will be called as soon as all of your enabled destinations have loaded\n     * and analytics.js has completed initialization.\n     *\n     * @returns\n     */\n    public async ready(): Promise {\n        await SegmentService._segmentInstance.ready();\n\n        return this;\n    }\n\n    /**\n     * Return information about the currently identified user\n     *\n     * @returns Informations about the currently identified user\n     */\n    public user(): User | null {\n        return SegmentService._segmentInstance.instance.user();\n    }\n\n    /**\n     * Return identifier about the currently identified user\n     *\n     * @returns Identifier about the currently identified user\n     */\n    public id(): string | null {\n        return this.user()?.id();\n    }\n\n    /**\n     * Override the default Anonymous ID\n     *\n     * @param anonymousId New anonymous ID\n     */\n    public setAnonymousId(anonymousId: string): void {\n        SegmentService._segmentInstance.setAnonymousId(anonymousId);\n    }\n\n    /**\n     * Return traits about the currently identified user\n     *\n     * @returns Traits about the currently identified user\n     */\n    public traits(): any {\n        return this.user()?.traits();\n    }\n\n    /**\n     * Reset the id, including anonymousId, and clear traits for the currently identified user and group.\n     */\n    public reset(): void {\n        SegmentService._segmentInstance.reset();\n    }\n\n    /**\n     * Turn on/off debug mode, logging helpful messages to the console.\n     *\n     * @param enabled Enable or not the debug mode\n     */\n    public debug(enabled?: boolean): void {\n        SegmentService._segmentInstance.debug(enabled);\n    }\n\n    /**\n     * Set listeners for these events and run your own custom code.\n     *\n     * @param method Name of the method to listen for\n     * @param callback A function to execute after each the emitted method\n     */\n    public on(method: string, callback: (event?: string, properties?: any, options?: any) => any): void {\n        SegmentService._segmentInstance.on(method, callback);\n    }\n\n    /**\n     * Attaches the `track` call as a handler to a link\n     *\n     * @param elements DOM element or an array of DOM elements to be bound with track method.\n     * @param event The name of the event, passed to the `track` method or a function that returns a string to be used\n     *              as the name of the track event.\n     * @param properties A dictionary of properties to pass with the `track` method.\n     */\n    public trackLink(elements: HTMLElement | HTMLElement[], event: string | Function, properties?: any | Function): void {\n        SegmentService._segmentInstance.trackLink(elements, event, properties);\n    }\n\n    /**\n     * Binds a `track` call to a form submission.\n     *\n     * @param forms The form element to track or an array of form\n     * @param event The name of the event, passed to the `track` method.\n     * @param properties A dictionary of properties to pass with the `track` method.\n     */\n    public trackForm(forms: HTMLFormElement | HTMLFormElement[], event: string | Function, properties?: any | Function): void {\n        SegmentService._segmentInstance.trackSubmit(forms, event, properties);\n    }\n\n    /**\n     * Add a source middleware called on events\n     *\n     * @param middleware Custom function\n     */\n    public addSourceMiddleware(middleware: SourceMiddleware): void {\n        SegmentService._segmentInstance.addSourceMiddleware(middleware);\n    }\n\n    /**\n     * Add destination middlewares called on events\n     *\n     * @param integration Integration name\n     * @param middlewares Custom functions\n     */\n    public addDestinationMiddleware(integration: string, ...middlewares: DestinationMiddleware[]): void {\n        SegmentService._segmentInstance.addDestinationMiddleware(integration, ...middlewares);\n    }\n\n    /**\n     * Register plugins\n     *\n     * @param plugins\n     */\n    public async register(...plugins: NewSegmentPlugin[]): Promise {\n        await SegmentService._segmentInstance.register(...plugins);\n\n        return;\n    }\n\n    public get segmentInstance(): Analytics {\n        return SegmentService._segmentInstance.instance;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WindowWrapper.html":{"url":"injectables/WindowWrapper.html","title":"injectable - WindowWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WindowWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/window-wrapper.ts\n        \n\n\n            \n                Description\n            \n            \n                Window Wrapper for Angular AOT\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                analytics\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        analytics\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AnalyticsSnippet\n\n                    \n                \n                    \n                        \n                                Defined in src/window-wrapper.ts:10\n                        \n                    \n\n            \n                \n                    Segment Analytics.js instance\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport type { AnalyticsSnippet } from '@segment/analytics-next';\n\n/**\n * Window Wrapper for Angular AOT\n */\n@Injectable()\nexport class WindowWrapper {\n    /** Segment Analytics.js instance */\n    public analytics: AnalyticsSnippet;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/ngx-segment-analytics.config.ts\n            \n            interface\n            SegmentConfig\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/ngx-segment-analytics.config.ts\n            \n            variable\n            DEFAULT_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/ngx-segment-analytics.config.ts\n            \n            variable\n            SEGMENT_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/ngx-segment-analytics.service.ts\n            \n            injectable\n            SegmentService\n            \n                81 %\n                (22/27)\n            \n        \n        \n            \n                \n                src/ngx-segment-analytics.service.ts\n            \n            interface\n            SegmentPlugin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/ngx-segment-analytics.service.ts\n            \n            type alias\n            DestinationMiddleware\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/ngx-segment-analytics.service.ts\n            \n            type alias\n            SegmentNextMiddleware\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/ngx-segment-analytics.service.ts\n            \n            type alias\n            SourceMiddleware\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/window-wrapper.ts\n            \n            injectable\n            WindowWrapper\n            \n                100 %\n                (2/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngx-segment-analytics\n\n\n\n\n\n\nThis Angular module provides an API for Segment using the analytics.js official library.\nCompatible with Angular AOT and Universal.\nInstallation\nTo install this library, run:\nExample :$ npm install --save ngx-segment-analyticsConsuming Segment\nAdd the SegmentModule to your Angular AppModule:\nExample :import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n// Import the Segment module\nimport { SegmentModule } from 'ngx-segment-analytics';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    // Segment Importation\n    SegmentModule.forRoot({ apiKey: 'YOUR_WRITE_APIKEY', debug: true, loadOnInitialization: true })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }You can use the SegmentService in any constructor as a injected service :\nExample :import { Component, OnInit } from '@angular/core';\nimport { SegmentService } from 'ngx-segment-analytics';\n@Component({\n    selector: 'hero',\n    templateUrl: './hero.component.html',\n    styleUrls: ['./hero.component.css']\n})\nexport class HeroComponent implements OnInit {\n\n    constructor(private segment: SegmentService) { }\n\n    public ngOnInit() {\n        this.segment.track('load an hero')\n            .then(() => console.log(\"Event sended\"));\n    }\n\n}Documentation\nA full documentation is available here\nAPI\nThis API is compatible with analytics.js but returns Promises instead of taking callbacks in parameters.\nExample :load(apiKey: string, options: any);\nget plugins: {[pluginName :string]: SegmentPlugin};\nidentify(userId?: string, traits?: any, options?: any): Promise;\ntrack(event: string, properties?: any, options?: any): Promise;\npage(category?: string, name?: string, properties?: any, options?: any): Promise;\ngroup(groupId: string, traits?: any): Promise;\nalias(userId: string, previousId?: string, options?: any): Promise;\nready(): Promise;\nuser(): any;\nid(): any;\ntraits(): any;\nreset(): void;\ndebug(enabled?: boolean): void;\non(method: string, callback: (event?: string, properties?: any, options?: any) => any): void;\ntrackLink(elements: HTMLElement | HTMLElement[], event: string | Function, properties?: Object | Function): void;\ntrackForm(forms: HTMLElement | HTMLElement[], event: string | Function, properties?: Object | Function): void;\ntimeout(timeout: number): void;\naddSourceMiddleware(middleware: ({integrations, payload, next}) => void): void;Development\nTo lint all *.ts files:\nExample :$ npm run lintTo generate all *.js, *.d.ts and *.metadata.json files:\nExample :$ npm run buildTo publish on npmjs registry :\nExample :$ npm publish distLicense\nMIT ©2019 OpenDecide\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2017 OpenDecide\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        SegmentModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 19.0.0\n        \n            Keywords : angular, segment\n        \n            Bugs : https://github.com/opendecide/ngx-segment-analytics/issues\n        \n            License : MIT\n        \n            Repository : https://github.com/opendecide/ngx-segment-analytics\n        \n            Author : OpenDecide\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DestinationMiddleware   (src/.../ngx-segment-analytics.service.ts)\n                        \n                        \n                            SegmentNextMiddleware   (src/.../ngx-segment-analytics.service.ts)\n                        \n                        \n                            SourceMiddleware   (src/.../ngx-segment-analytics.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/ngx-segment-analytics.service.ts\n    \n    \n        \n            \n                \n                    \n                    DestinationMiddleware\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SegmentNextMiddleware\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SourceMiddleware\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DEFAULT_CONFIG   (src/.../ngx-segment-analytics.config.ts)\n                        \n                        \n                            SEGMENT_CONFIG   (src/.../ngx-segment-analytics.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/ngx-segment-analytics.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SegmentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    debug: false,\n    loadOnInitialization: true, // Compatibility \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SEGMENT_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InjectionToken\n\n                    \n                \n                \n                    \n                        Default value : new InjectionToken('ngx-segment-analytics.config')\n                    \n                \n\n            \n                \n                    Segment Configuration Injection Token\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
