var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/SegmentConfig.html",[0,1.012,1,0.831]],["body/interfaces/SegmentConfig.html",[0,1.367,1,1.122,2,1.214,3,0.994,4,0.994,5,0.818,6,0.547,7,0.556,8,1.214,9,1.214,10,1.917,11,0.672,12,0.961,13,2.254,14,2.751,15,3.245,16,2.054,17,2.342,18,2.436,19,3.566,20,3.566,21,2.709,22,0.923,23,0.077,24,1.737,25,2.159,26,2.799,27,2.799,28,3.566,29,3.566,30,3.566,31,2.436,32,2.159,33,2.799,34,2.159,35,2.159,36,2.751,37,2.342,38,2.91,39,2.159,40,2.799,41,2.52,42,1.171,43,2.159,44,0.818,45,1.214,46,0.994,47,1.367,48,1.509,49,1.509,50,2.159,51,0.818,52,0.818,53,1.509,54,0.994,55,0.994,56,1.509,57,0.994,58,1.509,59,0.046,60,0.046]],["title/modules/SegmentModule.html",[61,1.229,62,1.229]],["body/modules/SegmentModule.html",[1,1.28,3,1.098,4,1.098,5,0.904,6,0.839,7,0.576,9,1.863,10,1.525,13,1.525,22,0.483,23,0.078,42,1.696,44,0.904,47,1.256,51,1.256,52,0.904,54,1.098,59,0.049,60,0.049,61,2.113,62,1.894,63,1.341,64,1.341,65,2.161,66,2.316,67,2.161,68,3.002,69,1.667,70,2.161,71,3.002,72,1.098,73,1.098,74,3.449,75,2.161,76,2.141,77,3.449,78,2.661,79,3.002,80,3.002,81,3.002,82,2.161,83,1.667,84,1.525,85,1.863,86,2.161,87,1.256,88,1.894,89,1.341,90,1.667,91,0.904,92,1.098,93,1.341,94,1.667,95,0.904,96,1.667,97,2.316,98,2.161,99,1.667,100,1.863,101,3.002,102,2.161,103,1.341,104,2.161,105,1.098,106,2.316,107,1.098,108,2.161,109,1.341,110,3.449,111,1.667,112,2.161,113,2.161,114,2.161,115,2.161,116,1.667,117,1.667]],["title/interfaces/SegmentPlugin.html",[0,1.012,118,1.229]],["body/interfaces/SegmentPlugin.html",[0,0.289,1,0.556,2,0.429,3,0.351,4,0.616,5,0.289,6,0.193,7,0.314,10,0.616,12,1.334,13,0.988,15,1.249,16,0.616,18,1.207,21,2.451,22,0.494,23,0.078,24,0.753,25,1.249,31,0.429,32,0.935,34,0.534,35,1.249,36,0.534,39,1.249,41,0.534,42,1.098,44,0.289,45,1.005,46,1.238,47,0.926,50,0.935,51,0.289,52,0.814,54,0.351,55,0.616,57,0.616,59,0.02,60,0.02,66,0.534,72,0.351,73,1.865,76,2.075,83,0.534,84,0.351,85,0.429,87,0.507,88,0.616,89,0.429,93,0.753,95,1.098,97,2.694,105,0.351,106,3.319,107,1.991,109,0.429,111,0.935,116,0.935,118,0.616,119,0.429,120,0.692,121,0.616,122,0.692,123,1.619,124,2.869,125,1.619,126,0.616,127,1.213,128,1.213,129,0.692,130,0.692,131,0.692,132,0.692,133,0.692,134,0.692,135,0.692,136,1.249,137,1.707,138,2.512,139,0.935,140,0.935,141,0.935,142,1.945,143,0.692,144,0.692,145,1.213,146,1.213,147,0.692,148,0.692,149,1.213,150,1.213,151,1.619,152,1.619,153,0.692,154,1.213,155,0.692,156,0.692,157,0.692,158,1.213,159,1.213,160,1.619,161,0.692,162,0.692,163,0.692,164,1.213,165,1.213,166,0.692,167,1.619,168,0.692,169,0.692,170,0.692,171,0.692,172,1.945,173,0.692,174,1.945,175,3.149,176,0.692,177,0.692,178,0.692,179,0.692,180,0.692,181,1.213,182,3.616,183,1.945,184,1.619,185,1.619,186,1.213,187,1.945,188,2.789,189,3.557,190,1.213,191,1.213,192,3.16,193,0.692,194,2.512,195,0.692,196,2.258,197,0.935,198,2.625,199,0.692,200,3.051,201,1.945,202,1.945,203,0.692,204,2.075,205,0.692,206,0.692,207,0.534,208,0.692,209,3.616,210,1.619,211,1.619,212,1.619,213,1.619,214,1.945,215,1.619,216,1.619,217,0.692,218,1.945,219,0.935,220,0.692,221,1.945,222,0.692,223,2.928,224,0.692,225,0.692,226,0.692,227,0.692,228,0.692,229,0.692,230,0.692,231,0.692,232,0.692,233,0.692,234,0.692,235,0.692,236,0.692,237,0.692,238,0.692,239,0.692,240,0.692,241,0.692,242,0.692,243,0.534,244,0.692,245,0.692,246,0.692,247,0.692,248,0.692,249,0.692,250,0.692,251,0.692,252,1.249,253,0.692,254,0.692,255,0.692,256,2.787,257,0.692,258,0.534,259,0.692,260,0.935,261,0.692,262,1.213,263,1.619,264,0.692,265,1.213,266,0.692,267,0.429,268,0.692,269,0.692,270,0.692,271,0.692,272,0.935,273,0.692,274,0.692,275,0.534,276,1.213,277,1.213,278,0.692,279,0.692,280,0.692,281,0.753,282,0.534,283,0.692,284,0.692,285,0.692,286,0.692,287,0.692,288,0.692,289,0.692,290,0.692,291,0.692,292,0.534,293,0.692,294,0.692,295,0.692,296,1.619,297,0.534,298,0.692,299,0.692,300,1.249,301,0.692,302,0.692,303,0.534,304,0.692,305,0.692,306,1.213,307,0.692,308,0.692,309,1.213,310,1.213,311,1.213,312,0.692,313,1.213,314,0.692,315,1.213,316,0.534,317,0.935,318,0.692,319,0.692,320,1.619,321,0.692,322,0.692,323,0.534,324,1.213,325,0.692,326,0.935,327,1.213,328,0.534,329,0.692,330,0.692,331,1.945,332,0.429,333,0.692,334,0.692,335,0.692,336,0.692,337,0.692,338,0.692,339,0.692]],["title/injectables/WindowWrapper.html",[87,1.012,121,1.229]],["body/injectables/WindowWrapper.html",[3,1.512,4,1.512,5,1.245,7,0.477,9,1.847,11,1.022,12,1.273,22,0.828,23,0.076,42,1.55,44,1.245,45,1.847,46,1.512,47,1.245,59,0.06,60,0.06,69,2.295,87,1.55,88,1.883,89,2.3,91,1.55,92,1.883,94,2.859,105,1.512,107,2.051,121,1.883,126,2.051,267,2.3,340,2.295,341,2.859,342,2.295,343,4.037,344,2.975]],["title/coverage.html",[345,2.501]],["body/coverage.html",[0,1.535,1,1.006,5,1.224,6,1.234,7,0.569,8,2.487,22,0.654,23,0.074,51,1.224,52,1.224,55,1.487,59,0.06,60,0.06,64,1.817,84,1.487,87,1.224,95,1.224,103,1.817,118,1.487,119,2.277,121,1.864,272,2.258,341,2.258,342,2.258,345,2.258,346,1.817,347,2.927,348,4.201,349,2.927,350,3.669,351,3.669,352,3.669,353,3.669,354,2.927,355,2.927,356,2.927,357,2.927,358,2.927]],["title/miscellaneous/functions.html",[332,1.796,359,0.704]],["body/miscellaneous/functions.html",[6,0.946,7,0.516,11,1.163,13,1.72,22,0.756,23,0.07,59,0.065,60,0.065,64,2.488,72,1.72,73,1.72,88,1.72,90,2.611,91,1.416,92,1.72,96,2.611,103,2.488,332,2.101,359,1.163,360,2.101,361,3.385]],["title/index.html",[11,0.704,362,1.581,363,1.581]],["body/index.html",[7,0.527,12,1.239,14,1.349,16,0.889,17,1.086,18,1.086,21,2.677,23,0.077,24,1.903,31,1.086,37,1.086,38,1.349,42,1.633,44,1.079,46,0.889,47,1.079,57,1.311,59,0.042,60,0.042,61,1.311,62,1.311,72,0.889,73,0.889,76,1.086,78,1.99,84,1.558,85,2.1,91,1.282,92,0.889,93,1.086,95,1.415,99,1.349,100,1.086,105,1.311,107,0.889,109,1.086,117,1.99,118,0.889,124,1.349,126,1.558,137,1.349,138,3.012,140,1.349,175,2.912,188,2.364,194,2.912,196,1.349,197,1.349,204,1.903,207,1.349,219,1.349,243,1.349,252,1.349,258,1.349,260,1.349,267,1.601,281,1.086,292,1.349,297,2.364,300,1.349,303,1.349,316,1.349,317,2.61,323,1.349,326,1.349,328,1.349,346,1.601,364,1.749,365,1.749,366,1.749,367,2.58,368,2.58,369,1.749,370,1.749,371,2.58,372,3.905,373,3.384,374,1.749,375,1.749,376,2.58,377,1.749,378,3.065,379,1.749,380,1.349,381,1.749,382,1.749,383,1.749,384,1.349,385,1.749,386,1.749,387,2.58,388,2.58,389,1.749,390,2.58,391,1.749,392,1.749,393,1.749,394,1.749,395,1.749,396,1.749,397,1.749,398,1.749,399,1.749,400,1.749,401,1.749,402,1.749,403,1.349,404,1.749,405,1.749,406,1.749,407,1.749,408,1.749,409,1.749,410,2.58,411,1.749,412,1.749,413,1.749,414,1.749,415,1.749,416,1.99,417,1.749,418,1.749,419,1.749,420,1.749,421,1.749,422,1.749,423,1.99,424,1.749,425,1.749,426,1.749,427,1.086,428,1.749,429,1.086]],["title/license.html",[362,1.581,363,1.581,430,1.272]],["body/license.html",[23,0.056,37,2.151,59,0.056,60,0.056,204,1.662,282,2.673,346,1.662,416,2.065,423,2.065,427,2.151,429,1.662,430,1.662,431,3.843,432,2.677,433,2.677,434,3.466,435,2.677,436,2.677,437,2.677,438,2.677,439,2.677,440,2.677,441,3.466,442,4.496,443,2.677,444,2.677,445,3.843,446,2.677,447,2.677,448,2.677,449,2.677,450,2.677,451,2.677,452,2.677,453,2.677,454,2.677,455,3.466,456,2.677,457,2.677,458,2.677,459,2.677,460,2.677,461,2.677,462,2.677,463,3.466,464,3.466,465,2.677,466,2.677,467,2.677,468,2.677,469,2.677,470,2.677,471,2.677,472,2.677,473,2.677,474,2.677,475,2.677,476,2.677,477,2.677,478,2.677,479,2.677,480,2.677,481,2.677,482,2.677,483,2.677,484,2.677,485,2.677,486,2.677,487,2.677,488,2.677,489,2.677,490,2.677,491,2.677,492,2.065,493,2.677,494,2.677]],["title/modules.html",[63,2.012]],["body/modules.html",[23,0.068,59,0.068,60,0.068,62,1.837,63,2.243,403,2.788,495,3.614,496,3.614]],["title/overview.html",[497,2.501]],["body/overview.html",[2,2.133,23,0.066,59,0.066,60,0.066,61,2.055,100,2.133,281,2.133,340,2.651,380,2.651,384,2.651,492,2.651,497,2.651,498,3.437,499,3.437,500,3.437,501,4.045,502,3.437,503,4.045]],["title/properties.html",[12,0.994,504,2.05]],["body/properties.html",[7,0.548,12,1.154,23,0.076,59,0.065,60,0.065,91,1.406,126,1.708,427,2.086,429,2.086,430,2.086,505,3.36,506,3.36,507,3.36,508,3.36,509,3.991,510,3.36,511,3.36,512,3.36]],["title/miscellaneous/typealiases.html",[359,0.704,513,2.893]],["body/miscellaneous/typealiases.html",[6,0.936,7,0.567,11,1.15,22,0.748,23,0.065,59,0.065,60,0.065,95,1.778,119,2.731,136,3.072,139,3.072,141,3.072,359,1.15,360,2.639,514,3.348]],["title/miscellaneous/variables.html",[359,0.704,515,2.232]],["body/miscellaneous/variables.html",[1,1.079,6,0.877,7,0.569,8,2.566,10,1.595,11,1.079,16,1.595,17,1.949,22,0.856,23,0.075,43,2.422,48,2.422,49,2.422,51,1.603,52,1.313,53,2.422,54,1.595,55,1.947,56,2.422,57,1.595,58,2.422,59,0.062,60,0.062,275,2.955,359,1.079,360,2.378,515,2.422,516,3.831]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":351,"title":{},"body":{"coverage.html":{}}}],["0/1",{"_index":352,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":502,"title":{},"body":{"overview.html":{}}}],["1/1",{"_index":353,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":348,"title":{},"body":{"coverage.html":{}}}],["17.0.0",{"_index":506,"title":{},"body":{"properties.html":{}}}],["2",{"_index":503,"title":{},"body":{"overview.html":{}}}],["2/2",{"_index":356,"title":{},"body":{"coverage.html":{}}}],["2017",{"_index":433,"title":{},"body":{"license.html":{}}}],["2019",{"_index":428,"title":{},"body":{"index.html":{}}}],["22/27",{"_index":355,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":349,"title":{},"body":{"coverage.html":{}}}],["81",{"_index":354,"title":{},"body":{"coverage.html":{}}}],["_config",{"_index":147,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["_doc",{"_index":150,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["_segmentinstance",{"_index":148,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["_w",{"_index":149,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["above",{"_index":462,"title":{},"body":{"license.html":{}}}],["accesstoken",{"_index":134,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["action",{"_index":487,"title":{},"body":{"license.html":{}}}],["actions",{"_index":185,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["add",{"_index":326,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["adddestinationmiddleware(integration",{"_index":333,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["addsourcemiddleware(middleware",{"_index":328,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["alias",{"_index":245,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["alias(userid",{"_index":258,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["aliases",{"_index":514,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":261,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["along",{"_index":212,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["already",{"_index":115,"title":{},"body":{"modules/SegmentModule.html":{}}}],["analytics",{"_index":126,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{},"properties.html":{}}}],["analytics.config",{"_index":54,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"miscellaneous/variables.html":{}}}],["analytics.config.ts",{"_index":8,"title":{},"body":{"interfaces/SegmentConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["analytics.js",{"_index":267,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["analytics.module.ts",{"_index":64,"title":{},"body":{"modules/SegmentModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["analytics.module.ts:32",{"_index":70,"title":{},"body":{"modules/SegmentModule.html":{}}}],["analytics.service",{"_index":86,"title":{},"body":{"modules/SegmentModule.html":{}}}],["analytics.service.ts",{"_index":119,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["analytics/issues",{"_index":510,"title":{},"body":{"properties.html":{}}}],["analyticsbrowser",{"_index":123,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["analyticsbrowsersettings",{"_index":125,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["analyticsconsuming",{"_index":375,"title":{},"body":{"index.html":{}}}],["analyticssnippet",{"_index":343,"title":{},"body":{"injectables/WindowWrapper.html":{}}}],["and/or",{"_index":453,"title":{},"body":{"license.html":{}}}],["angular",{"_index":91,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["angular/common",{"_index":83,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{}}}],["angular/core",{"_index":44,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["angular/platform",{"_index":377,"title":{},"body":{"index.html":{}}}],["anonymous",{"_index":276,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["anonymousid",{"_index":277,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["aot",{"_index":92,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["api",{"_index":24,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["apikey",{"_index":14,"title":{},"body":{"interfaces/SegmentConfig.html":{},"index.html":{}}}],["app.component",{"_index":379,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":378,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":117,"title":{},"body":{"modules/SegmentModule.html":{},"index.html":{}}}],["arising",{"_index":491,"title":{},"body":{"license.html":{}}}],["array",{"_index":311,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["assemblage",{"_index":231,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["associate",{"_index":183,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["associated",{"_index":443,"title":{},"body":{"license.html":{}}}],["associates",{"_index":222,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["async",{"_index":192,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["attaches",{"_index":305,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["author",{"_index":512,"title":{},"body":{"properties.html":{}}}],["authors",{"_index":480,"title":{},"body":{"license.html":{}}}],["available",{"_index":403,"title":{},"body":{"index.html":{},"modules.html":{}}}],["await",{"_index":198,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["being",{"_index":215,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["binds",{"_index":319,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["boolean",{"_index":31,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["bootstrap",{"_index":384,"title":{},"body":{"index.html":{},"overview.html":{}}}],["bound",{"_index":312,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["browse",{"_index":496,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":93,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["browsermodule",{"_index":376,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":508,"title":{},"body":{"properties.html":{}}}],["buildto",{"_index":422,"title":{},"body":{"index.html":{}}}],["c",{"_index":432,"title":{},"body":{"license.html":{}}}],["call",{"_index":306,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["callback",{"_index":300,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["callbacks",{"_index":407,"title":{},"body":{"index.html":{}}}],["called",{"_index":263,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["came",{"_index":237,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["category",{"_index":218,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["cdn",{"_index":27,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["cdnurl",{"_index":15,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["charge",{"_index":438,"title":{},"body":{"license.html":{}}}],["claim",{"_index":483,"title":{},"body":{"license.html":{}}}],["class",{"_index":105,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["clear",{"_index":283,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["cluster",{"_index":232,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["code",{"_index":298,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["combines",{"_index":246,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["commonmodule",{"_index":81,"title":{},"body":{"modules/SegmentModule.html":{}}}],["company",{"_index":224,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["compatibility",{"_index":58,"title":{},"body":{"interfaces/SegmentConfig.html":{},"miscellaneous/variables.html":{}}}],["compatible",{"_index":368,"title":{},"body":{"index.html":{}}}],["completed",{"_index":268,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["component",{"_index":387,"title":{},"body":{"index.html":{}}}],["concept",{"_index":240,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["conditions",{"_index":461,"title":{},"body":{"license.html":{}}}],["config",{"_index":74,"title":{},"body":{"modules/SegmentModule.html":{}}}],["configuration",{"_index":10,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"miscellaneous/variables.html":{}}}],["connection",{"_index":493,"title":{},"body":{"license.html":{}}}],["console",{"_index":290,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["console.error('the",{"_index":162,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["console.log(\"event",{"_index":400,"title":{},"body":{"index.html":{}}}],["console.log('segment",{"_index":165,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["const",{"_index":50,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["constructor",{"_index":109,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["constructor(@optional",{"_index":112,"title":{},"body":{"modules/SegmentModule.html":{}}}],["constructor(private",{"_index":397,"title":{},"body":{"index.html":{}}}],["contract",{"_index":488,"title":{},"body":{"license.html":{}}}],["copies",{"_index":455,"title":{},"body":{"license.html":{}}}],["copy",{"_index":441,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":431,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":345,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current",{"_index":242,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["currently",{"_index":256,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["custom",{"_index":39,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["d.ts",{"_index":420,"title":{},"body":{"index.html":{}}}],["damages",{"_index":484,"title":{},"body":{"license.html":{}}}],["database",{"_index":195,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["deal",{"_index":444,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":494,"title":{},"body":{"license.html":{}}}],["debug",{"_index":16,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["debug(enabled",{"_index":292,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["declarations",{"_index":380,"title":{},"body":{"index.html":{},"overview.html":{}}}],["default",{"_index":275,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"miscellaneous/variables.html":{}}}],["default_config",{"_index":55,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":255,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["defined",{"_index":69,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["dependencies",{"_index":498,"title":{},"body":{"overview.html":{}}}],["deprecated",{"_index":41,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["deps",{"_index":104,"title":{},"body":{"modules/SegmentModule.html":{}}}],["description",{"_index":9,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["destination",{"_index":330,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["destinationmiddleware",{"_index":141,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"miscellaneous/typealiases.html":{}}}],["destinationmiddlewareparams",{"_index":129,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["destinations",{"_index":266,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["dictionary",{"_index":189,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["distlicense",{"_index":426,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":451,"title":{},"body":{"license.html":{}}}],["document",{"_index":122,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["documentation",{"_index":346,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":151,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["each",{"_index":301,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["element",{"_index":310,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["elements",{"_index":309,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["email",{"_index":191,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["emitted",{"_index":302,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["empty",{"_index":163,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["enable",{"_index":291,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["enabled",{"_index":265,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["error('segmentmodule",{"_index":114,"title":{},"body":{"modules/SegmentModule.html":{}}}],["event",{"_index":204,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{},"license.html":{}}}],["events",{"_index":296,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["example",{"_index":372,"title":{},"body":{"index.html":{}}}],["execute",{"_index":262,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["export",{"_index":47,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["exports",{"_index":500,"title":{},"body":{"overview.html":{}}}],["express",{"_index":471,"title":{},"body":{"license.html":{}}}],["extra",{"_index":213,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["false",{"_index":56,"title":{},"body":{"interfaces/SegmentConfig.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{}}}],["files",{"_index":416,"title":{},"body":{"index.html":{},"license.html":{}}}],["fitness",{"_index":476,"title":{},"body":{"license.html":{}}}],["following",{"_index":460,"title":{},"body":{"license.html":{}}}],["form",{"_index":320,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["forms",{"_index":322,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["forroot",{"_index":67,"title":{},"body":{"modules/SegmentModule.html":{}}}],["forroot(config",{"_index":68,"title":{},"body":{"modules/SegmentModule.html":{}}}],["free",{"_index":437,"title":{},"body":{"license.html":{}}}],["full",{"_index":402,"title":{},"body":{"index.html":{}}}],["function",{"_index":95,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":332,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/SegmentPlugin.html":{},"miscellaneous/functions.html":{}}}],["furnished",{"_index":458,"title":{},"body":{"license.html":{}}}],["gang",{"_index":234,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["generate",{"_index":418,"title":{},"body":{"index.html":{}}}],["getting",{"_index":362,"title":{"index.html":{},"license.html":{}},"body":{}}],["getwindow",{"_index":103,"title":{},"body":{"modules/SegmentModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getwindow(platformid",{"_index":96,"title":{},"body":{"modules/SegmentModule.html":{},"miscellaneous/functions.html":{}}}],["granted",{"_index":436,"title":{},"body":{"license.html":{}}}],["graph",{"_index":495,"title":{},"body":{"modules.html":{}}}],["group",{"_index":221,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["group(groupid",{"_index":243,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["groupid",{"_index":241,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["handler",{"_index":307,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["helpful",{"_index":288,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["here",{"_index":404,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":435,"title":{},"body":{"license.html":{}}}],["hero",{"_index":390,"title":{},"body":{"index.html":{}}}],["hero.component.css",{"_index":394,"title":{},"body":{"index.html":{}}}],["hero.component.html",{"_index":392,"title":{},"body":{"index.html":{}}}],["herocomponent",{"_index":395,"title":{},"body":{"index.html":{}}}],["holders",{"_index":481,"title":{},"body":{"license.html":{}}}],["host",{"_index":28,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["htmlelement",{"_index":317,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["htmlformelement",{"_index":324,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["https",{"_index":169,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["https://github.com/opendecide/ngx",{"_index":509,"title":{},"body":{"properties.html":{}}}],["id",{"_index":196,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["identified",{"_index":223,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["identifier",{"_index":272,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"coverage.html":{}}}],["identify",{"_index":181,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["identify(traits",{"_index":193,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["identify(userid",{"_index":197,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["identities",{"_index":250,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["implements",{"_index":396,"title":{},"body":{"index.html":{}}}],["implied",{"_index":472,"title":{},"body":{"license.html":{}}}],["import",{"_index":42,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["importation",{"_index":381,"title":{},"body":{"index.html":{}}}],["imports",{"_index":99,"title":{},"body":{"modules/SegmentModule.html":{},"index.html":{}}}],["included",{"_index":465,"title":{},"body":{"license.html":{}}}],["including",{"_index":282,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"license.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"interfaces/SegmentConfig.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{}}}],["information",{"_index":214,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["informations",{"_index":270,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["initialisation",{"_index":71,"title":{},"body":{"modules/SegmentModule.html":{}}}],["initialization",{"_index":35,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["initialized",{"_index":179,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["initoptions",{"_index":127,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["inject",{"_index":120,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["inject(document",{"_index":155,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["inject(segment_config",{"_index":156,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["inject(windowwrapper",{"_index":153,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["injectable",{"_index":121,"title":{"injectables/WindowWrapper.html":{}},"body":{"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{}}}],["injectables",{"_index":340,"title":{},"body":{"injectables/WindowWrapper.html":{},"overview.html":{}}}],["injected",{"_index":385,"title":{},"body":{"index.html":{}}}],["injection",{"_index":48,"title":{},"body":{"interfaces/SegmentConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":43,"title":{},"body":{"interfaces/SegmentConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('ngx",{"_index":53,"title":{},"body":{"interfaces/SegmentConfig.html":{},"miscellaneous/variables.html":{}}}],["install",{"_index":371,"title":{},"body":{"index.html":{}}}],["installation",{"_index":370,"title":{},"body":{"index.html":{}}}],["instance",{"_index":94,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["instead",{"_index":38,"title":{},"body":{"interfaces/SegmentConfig.html":{},"index.html":{}}}],["integration",{"_index":142,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["integrations",{"_index":140,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"overview.html":{}}}],["isplatformbrowser",{"_index":82,"title":{},"body":{"modules/SegmentModule.html":{}}}],["isplatformbrowser(platformid",{"_index":98,"title":{},"body":{"modules/SegmentModule.html":{}}}],["js",{"_index":419,"title":{},"body":{"index.html":{}}}],["key",{"_index":25,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["keywords",{"_index":507,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":470,"title":{},"body":{"license.html":{}}}],["know",{"_index":190,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["legend",{"_index":499,"title":{},"body":{"overview.html":{}}}],["lets",{"_index":201,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["liability",{"_index":485,"title":{},"body":{"license.html":{}}}],["liable",{"_index":482,"title":{},"body":{"license.html":{}}}],["library",{"_index":367,"title":{},"body":{"index.html":{}}}],["license",{"_index":430,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["limitation",{"_index":447,"title":{},"body":{"license.html":{}}}],["limited",{"_index":473,"title":{},"body":{"license.html":{}}}],["link",{"_index":308,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["lint",{"_index":414,"title":{},"body":{"index.html":{}}}],["lintto",{"_index":417,"title":{},"body":{"index.html":{}}}],["listen",{"_index":299,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["listeners",{"_index":295,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["load",{"_index":34,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["load(apikey",{"_index":408,"title":{},"body":{"index.html":{}}}],["load(settingsorapikey",{"_index":176,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["loaded",{"_index":116,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{}}}],["loadoninitialization",{"_index":17,"title":{},"body":{"interfaces/SegmentConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["logging",{"_index":287,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["matching",{"_index":60,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":475,"title":{},"body":{"license.html":{}}}],["merge",{"_index":450,"title":{},"body":{"license.html":{}}}],["messages",{"_index":289,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["metadata.json",{"_index":421,"title":{},"body":{"index.html":{}}}],["method",{"_index":182,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["methods",{"_index":65,"title":{},"body":{"modules/SegmentModule.html":{}}}],["middleware",{"_index":327,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["middlewareparams",{"_index":130,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["middlewares",{"_index":331,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["miscellaneous",{"_index":359,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":427,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mode",{"_index":32,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["modify",{"_index":449,"title":{},"body":{"license.html":{}}}],["module",{"_index":61,"title":{"modules/SegmentModule.html":{}},"body":{"modules/SegmentModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":63,"title":{"modules.html":{}},"body":{"modules/SegmentModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":77,"title":{},"body":{"modules/SegmentModule.html":{}}}],["name",{"_index":73,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["new",{"_index":52,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["new(player",{"_index":133,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["newsegmentplugin",{"_index":128,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["next",{"_index":46,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["next/src/plugins/middleware",{"_index":131,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["ngmodule",{"_index":78,"title":{},"body":{"modules/SegmentModule.html":{},"index.html":{}}}],["ngoninit",{"_index":398,"title":{},"body":{"index.html":{}}}],["ngx",{"_index":85,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["noninfringement",{"_index":479,"title":{},"body":{"license.html":{}}}],["notice",{"_index":463,"title":{},"body":{"license.html":{}}}],["npm",{"_index":373,"title":{},"body":{"index.html":{}}}],["npmjs",{"_index":424,"title":{},"body":{"index.html":{}}}],["null",{"_index":111,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{}}}],["number",{"_index":412,"title":{},"body":{"index.html":{}}}],["object",{"_index":410,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":440,"title":{},"body":{"license.html":{}}}],["official",{"_index":366,"title":{},"body":{"index.html":{}}}],["on(method",{"_index":303,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["on/off",{"_index":286,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["oninit",{"_index":388,"title":{},"body":{"index.html":{}}}],["opendecide",{"_index":429,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["option",{"_index":168,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["optional",{"_index":13,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":175,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["organization",{"_index":225,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["others",{"_index":135,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["otherwise",{"_index":490,"title":{},"body":{"license.html":{}}}],["out",{"_index":492,"title":{},"body":{"license.html":{},"overview.html":{}}}],["override",{"_index":274,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["overview",{"_index":497,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":504,"title":{"properties.html":{}},"body":{}}],["page",{"_index":209,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["page(category",{"_index":219,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["page(name",{"_index":217,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["param",{"_index":106,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{}}}],["parameters",{"_index":72,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["parentmodule",{"_index":110,"title":{},"body":{"modules/SegmentModule.html":{}}}],["particular",{"_index":477,"title":{},"body":{"license.html":{}}}],["party",{"_index":235,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["pass",{"_index":315,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["passed",{"_index":313,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["payload",{"_index":137,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["perform",{"_index":203,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["permission",{"_index":434,"title":{},"body":{"license.html":{}}}],["permit",{"_index":456,"title":{},"body":{"license.html":{}}}],["person",{"_index":439,"title":{},"body":{"license.html":{}}}],["persons",{"_index":457,"title":{},"body":{"license.html":{}}}],["platform_id",{"_index":79,"title":{},"body":{"modules/SegmentModule.html":{}}}],["platformid",{"_index":361,"title":{},"body":{"miscellaneous/functions.html":{}}}],["platoon",{"_index":230,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["plugin",{"_index":36,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["pluginname",{"_index":409,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":18,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["portions",{"_index":467,"title":{},"body":{"license.html":{}}}],["previous",{"_index":253,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["previousid",{"_index":252,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["previously",{"_index":248,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["private",{"_index":154,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["project",{"_index":226,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["promise",{"_index":194,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["promises",{"_index":405,"title":{},"body":{"index.html":{}}}],["properties",{"_index":12,"title":{"properties.html":{}},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{},"properties.html":{}}}],["protected",{"_index":145,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["provide",{"_index":101,"title":{},"body":{"modules/SegmentModule.html":{}}}],["provided",{"_index":468,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":143,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["provider",{"_index":90,"title":{},"body":{"modules/SegmentModule.html":{},"miscellaneous/functions.html":{}}}],["providers",{"_index":100,"title":{},"body":{"modules/SegmentModule.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":364,"title":{},"body":{"index.html":{}}}],["proxied",{"_index":30,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["public",{"_index":107,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["publish",{"_index":423,"title":{},"body":{"index.html":{},"license.html":{}}}],["purpose",{"_index":478,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":146,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["ready",{"_index":260,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["recognizable",{"_index":186,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["recognized",{"_index":254,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["record",{"_index":202,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["register",{"_index":335,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["register(...plugins",{"_index":336,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["registry",{"_index":425,"title":{},"body":{"index.html":{}}}],["repository",{"_index":511,"title":{},"body":{"properties.html":{}}}],["requests",{"_index":29,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["reset",{"_index":281,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{},"overview.html":{}}}],["restriction",{"_index":446,"title":{},"body":{"license.html":{}}}],["results",{"_index":59,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":97,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{}}}],["returns",{"_index":76,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["rights",{"_index":448,"title":{},"body":{"license.html":{}}}],["root",{"_index":144,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["run",{"_index":297,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["same",{"_index":239,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["save",{"_index":374,"title":{},"body":{"index.html":{}}}],["segment",{"_index":7,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["segment.io",{"_index":26,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["segment/analytics",{"_index":45,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{}}}],["segment_config",{"_index":51,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["segmentconfig",{"_index":1,"title":{"interfaces/SegmentConfig.html":{}},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["segmenthost",{"_index":19,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["segmentinstance",{"_index":338,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentmodule",{"_index":62,"title":{"modules/SegmentModule.html":{}},"body":{"modules/SegmentModule.html":{},"index.html":{},"modules.html":{}}}],["segmentmodule.forroot",{"_index":382,"title":{},"body":{"index.html":{}}}],["segmentnextmiddleware",{"_index":136,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"miscellaneous/typealiases.html":{}}}],["segmentplugin",{"_index":118,"title":{"interfaces/SegmentPlugin.html":{}},"body":{"interfaces/SegmentPlugin.html":{},"coverage.html":{},"index.html":{}}}],["segmentservice",{"_index":84,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"index.html":{}}}],["segmentservice._segmentinstance.adddestinationmiddleware(integration",{"_index":334,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.addsourcemiddleware(middleware",{"_index":329,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.alias(userid",{"_index":259,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.debug(enabled",{"_index":293,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.group(groupid",{"_index":244,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.identify(userid",{"_index":199,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.instance",{"_index":339,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.instance.initialized",{"_index":166,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.instance.user",{"_index":271,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.load(settings",{"_index":178,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.load({writekey",{"_index":171,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.on(method",{"_index":304,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.page(category",{"_index":220,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.ready",{"_index":269,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.register(...plugins",{"_index":337,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.reset",{"_index":284,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.setanonymousid(anonymousid",{"_index":279,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.track(event",{"_index":208,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.tracklink(elements",{"_index":318,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmentservice._segmentinstance.tracksubmit(forms",{"_index":325,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segmenturi",{"_index":20,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["selector",{"_index":389,"title":{},"body":{"index.html":{}}}],["sell",{"_index":454,"title":{},"body":{"license.html":{}}}],["sended",{"_index":401,"title":{},"body":{"index.html":{}}}],["service",{"_index":386,"title":{},"body":{"index.html":{}}}],["set",{"_index":294,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["setanonymousid(anonymousid",{"_index":278,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["settings",{"_index":174,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["settingsorapikey",{"_index":172,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["shall",{"_index":464,"title":{},"body":{"license.html":{}}}],["skipself",{"_index":80,"title":{},"body":{"modules/SegmentModule.html":{}}}],["society",{"_index":236,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["software",{"_index":442,"title":{},"body":{"license.html":{}}}],["soon",{"_index":264,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{}}}],["sourcemiddleware",{"_index":139,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../ngx",{"_index":360,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/ngx",{"_index":6,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/window",{"_index":341,"title":{},"body":{"injectables/WindowWrapper.html":{},"coverage.html":{}}}],["started",{"_index":363,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":347,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":66,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{}}}],["status",{"_index":33,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["string",{"_index":21,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["styleurls",{"_index":393,"title":{},"body":{"index.html":{}}}],["subject",{"_index":459,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":452,"title":{},"body":{"license.html":{}}}],["submission",{"_index":321,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["substantial",{"_index":466,"title":{},"body":{"license.html":{}}}],["table",{"_index":358,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":357,"title":{},"body":{"coverage.html":{}}}],["taking",{"_index":406,"title":{},"body":{"index.html":{}}}],["team",{"_index":228,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["templateurl",{"_index":391,"title":{},"body":{"index.html":{}}}],["this._config",{"_index":157,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._config.apikey",{"_index":160,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._config.cdnurl",{"_index":170,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._config.debug",{"_index":164,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._config.loadoninitialization",{"_index":158,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._config.segmenthost",{"_index":167,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.debug(this._config.debug",{"_index":180,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.segment.track('load",{"_index":399,"title":{},"body":{"index.html":{}}}],["this.user()?.id",{"_index":273,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.user()?.traits",{"_index":280,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["throw",{"_index":113,"title":{},"body":{"modules/SegmentModule.html":{}}}],["timeout(timeout",{"_index":411,"title":{},"body":{"index.html":{}}}],["token",{"_index":49,"title":{},"body":{"interfaces/SegmentConfig.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":489,"title":{},"body":{"license.html":{}}}],["track",{"_index":200,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["track(event",{"_index":207,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["trackform(forms",{"_index":323,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["tracking",{"_index":206,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["tracklink(elements",{"_index":316,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["traits",{"_index":188,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["tribe",{"_index":229,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["troop",{"_index":233,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["true",{"_index":57,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":415,"title":{},"body":{"index.html":{}}}],["turn",{"_index":285,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["two",{"_index":247,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["type",{"_index":22,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":513,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":159,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["unassociated",{"_index":249,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["undefined",{"_index":161,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["universal",{"_index":369,"title":{},"body":{"index.html":{}}}],["up",{"_index":238,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["uri",{"_index":40,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["use",{"_index":37,"title":{},"body":{"interfaces/SegmentConfig.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":314,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["usefactory",{"_index":102,"title":{},"body":{"modules/SegmentModule.html":{}}}],["user",{"_index":124,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["userconfig",{"_index":152,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["userid",{"_index":187,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["users",{"_index":184,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["user’s",{"_index":257,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["usevalue",{"_index":108,"title":{},"body":{"modules/SegmentModule.html":{}}}],["using",{"_index":365,"title":{},"body":{"index.html":{}}}],["value",{"_index":516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":350,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":515,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":505,"title":{},"body":{"properties.html":{}}}],["video",{"_index":132,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["viewed",{"_index":216,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["views",{"_index":210,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["void",{"_index":138,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["void;development",{"_index":413,"title":{},"body":{"index.html":{}}}],["want",{"_index":251,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["warranties",{"_index":474,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":469,"title":{},"body":{"license.html":{}}}],["website",{"_index":211,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["whether",{"_index":486,"title":{},"body":{"license.html":{}}}],["window",{"_index":88,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/functions.html":{}}}],["windowwrapper",{"_index":87,"title":{"injectables/WindowWrapper.html":{}},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{}}}],["without",{"_index":445,"title":{},"body":{"license.html":{}}}],["workspace",{"_index":227,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["wrapper",{"_index":89,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{}}}],["wrapper.ts",{"_index":342,"title":{},"body":{"injectables/WindowWrapper.html":{},"coverage.html":{}}}],["wrapper.ts:10",{"_index":344,"title":{},"body":{"injectables/WindowWrapper.html":{}}}],["write",{"_index":173,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["writekey",{"_index":177,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["yes",{"_index":75,"title":{},"body":{"modules/SegmentModule.html":{}}}],["your_write_apikey",{"_index":383,"title":{},"body":{"index.html":{}}}],["you’re",{"_index":205,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["zoom",{"_index":501,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/SegmentConfig.html":{"url":"interfaces/SegmentConfig.html","title":"interface - SegmentConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SegmentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-segment-analytics.config.ts\n        \n\n\n            \n                Description\n            \n            \n                Segment Configuration Interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            apiKey\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cdnURL\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            debug\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            loadOnInitialization\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            plugins\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            segmentHost\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            segmentUri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apiKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    API Key for Segment.io\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cdnURL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cdnURL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    CDN host if requests are proxied\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        debug:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Debug mode status\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadOnInitialization\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loadOnInitialization:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Load Segment configuration on initialization\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plugins\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plugins:     Plugin[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Plugin[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Plugins\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        segmentHost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Use cdnURL instead.\n                                    \n                                \n                                \n                                    \n                                        segmentHost:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Segment Host if requests are proxied\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        segmentUri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Use cdnURL instead.\n                                    \n                                \n                                \n                                    \n                                        segmentUri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                     Segment Custom URI\n @deprecated Use cdnURL instead.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {InjectionToken} from '@angular/core';\nimport type {Plugin} from '@segment/analytics-next';\n\n/**\n * Segment Configuration Interface\n */\nexport interface SegmentConfig {\n    /** API Key for Segment.io */\n    apiKey?: string;\n    /** Debug mode status */\n    debug?: boolean;\n    /** Load Segment configuration on initialization */\n    loadOnInitialization?: boolean;\n    /**\n     * Segment Host if requests are proxied\n     * @deprecated Use cdnURL instead.\n     **/\n    segmentHost?: string;\n    /**\n     *  Segment Custom URI\n     *  @deprecated Use cdnURL instead.\n     **/\n    segmentUri?: string;\n    /** CDN host if requests are proxied */\n    cdnURL?: string;\n    /** Plugins **/\n    plugins?: Plugin[];\n}\n\n/** Segment Configuration Injection Token */\nexport const SEGMENT_CONFIG: InjectionToken = new InjectionToken('ngx-segment-analytics.config');\n\nexport const DEFAULT_CONFIG: SegmentConfig = {\n    debug: false,\n    loadOnInitialization: true, // Compatibility \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SegmentModule.html":{"url":"modules/SegmentModule.html","title":"module - SegmentModule","body":"\n                   \n\n\n\n\n    Modules\n    SegmentModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/ngx-segment-analytics.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Segment Module\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(config?: SegmentConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/ngx-segment-analytics.module.ts:32\n                        \n                    \n\n\n            \n                \n                        Segment Module Initialisation\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                            SegmentConfig\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Segment Configuration\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ModuleWithProviders\n\n                        \n                            \n                                Segment Module\n\n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import {ModuleWithProviders, NgModule, Optional, PLATFORM_ID, SkipSelf} from '@angular/core';\nimport {CommonModule, isPlatformBrowser} from '@angular/common';\nimport {SegmentService} from './ngx-segment-analytics.service';\nimport {SEGMENT_CONFIG, SegmentConfig} from './ngx-segment-analytics.config';\nimport {WindowWrapper} from './window-wrapper';\n\n/**\n * Window Provider for Angular AOT\n * @returns Browser Window instance\n */\nexport function getWindow(platformId: any) {\n    return isPlatformBrowser(platformId) ? window : {};\n}\n\n/**\n * Segment Module\n */\n@NgModule({\n    imports: [CommonModule],\n    providers: [\n        {provide: WindowWrapper, useFactory: getWindow, deps: [PLATFORM_ID]},\n    ]\n})\nexport class SegmentModule {\n\n    /**\n     * Segment Module Initialisation\n     *\n     * @param config Segment Configuration\n     * @returns Segment Module\n     */\n    public static forRoot(config?: SegmentConfig): ModuleWithProviders {\n        return {\n            ngModule: SegmentModule,\n            providers: [\n                {provide: SEGMENT_CONFIG, useValue: config},\n                SegmentService,\n            ],\n        };\n    }\n\n    /**\n     * Segment Module Constructor\n     *\n     * @param parentModule Must be null\n     */\n    constructor(@Optional() @SkipSelf() parentModule: SegmentModule) {\n        if (parentModule) {\n            throw new Error('SegmentModule is already loaded. Import it in the AppModule only');\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SegmentPlugin.html":{"url":"interfaces/SegmentPlugin.html","title":"interface - SegmentPlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SegmentPlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-segment-analytics.service.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Inject, Injectable} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {DEFAULT_CONFIG, SEGMENT_CONFIG, SegmentConfig} from './ngx-segment-analytics.config';\nimport {WindowWrapper} from './window-wrapper';\nimport {AnalyticsBrowser} from '@segment/analytics-next';\nimport type {User, AnalyticsBrowserSettings, Analytics, InitOptions, Plugin as NewSegmentPlugin} from '@segment/analytics-next';\n\n// import type {DestinationMiddlewareParams, MiddlewareParams} from '@segment/analytics-next/src/plugins/middleware';\n\nexport interface SegmentPlugin {\n    // Video Plugins\n    new(player: any, accessToken: string): any;\n\n    // Others plugins\n    new(): any;\n}\n\nexport type SegmentNextMiddleware = (payload: any) => void;\nexport type SourceMiddleware = ({integrations, payload, next}: {\n    integrations: { [key: string]: any },\n    payload: any,\n    next: SegmentNextMiddleware,\n}) => void;\nexport type DestinationMiddleware = ({integration, payload, next}: {\n    integration: string,\n    payload: any,\n    next: SegmentNextMiddleware,\n}) => void;\n\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SegmentService {\n\n    protected readonly _config: SegmentConfig;\n    protected static readonly _segmentInstance: AnalyticsBrowser = new AnalyticsBrowser();\n\n    /**\n     * @param _w Browser window\n     * @param _doc Browser DOM\n     * @param userConfig Segment configuration\n     */\n    constructor(\n        @Inject(WindowWrapper) private _w: WindowWrapper,\n        @Inject(DOCUMENT) private _doc: any,\n        @Inject(SEGMENT_CONFIG) userConfig: SegmentConfig\n    ) {\n        this._config = {...DEFAULT_CONFIG, ...userConfig};\n\n        if (this._config.loadOnInitialization && (typeof this._config.apiKey === 'undefined' || this._config.apiKey === '')) {\n            console.error('The API Key cannot be an empty string if Segment must be loaded on initialization.');\n            return;\n        }\n\n        if (true === this._config.debug) {\n            console.log('Segment initialization...');\n        }\n\n        if (this._config.loadOnInitialization && !SegmentService._segmentInstance.instance.initialized) {\n            if (this._config.segmentHost) {\n                // Deprecated option\n                const cdnUrl = 'https://' + this._config.segmentHost;\n            } else {\n                const cdnUrl = this._config.cdnURL;\n            }\n\n            SegmentService._segmentInstance.load({writeKey: this._config.apiKey, cdnURL: this._config.segmentHost});\n        }\n    }\n\n    /**\n     * Load Segment configuration.\n     *\n     * @param settingsOrApiKey Write API Key or Segment settings.\n     * @param options Optional parameters.\n     */\n    public load(settingsOrApiKey: AnalyticsBrowserSettings | string, options: InitOptions = {}): void {\n        let settings: AnalyticsBrowserSettings;\n        if (typeof settingsOrApiKey === 'string') {\n            settings = {writeKey: settingsOrApiKey};\n        } else {\n            settings = settingsOrApiKey;\n        }\n\n        SegmentService._segmentInstance.load(settings, options);\n        if (true === this._config.debug) {\n            console.log('Segment initialized');\n        }\n        this.debug(this._config.debug);\n    }\n\n    /**\n     * The identify method is how you associate your users and their actions to a recognizable userId and traits.\n     *\n     * @param traits A dictionary of traits you know about the user, like their email or name.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public async identify(traits: any, options?: any): Promise;\n\n    /**\n     * The identify method is how you associate your users and their actions to a recognizable userId and traits.\n     *\n     * @param userId The database ID for the user.\n     * @param traits A dictionary of traits you know about the user, like their email or name.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public async identify(userId: string, traits?: any, options?: any): Promise;\n    public async identify(userId: string, traits?: any, options?: any): Promise {\n        await SegmentService._segmentInstance.identify(userId, traits, options);\n\n        return this;\n    }\n\n    /**\n     * The track method lets you record any actions your users perform.\n     *\n     * @param event The name of the event you’re tracking.\n     * @param properties A dictionary of properties for the event.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public async track(event: string, properties?: any, options?: any): Promise {\n        await SegmentService._segmentInstance.track(event, properties, options);\n\n        return this;\n    }\n\n    /**\n     * The page method lets you record page views on your website, along with optional extra information about the page being viewed.\n     *\n     * @param name The name of the page.\n     * @param properties A dictionary of properties of the page.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public async page(name?: string, properties?: any, options?: any): Promise;\n\n    /**\n     * The page method lets you record page views on your website, along with optional extra information about the page being viewed.\n     *\n     * @param category The category of the page.\n     * @param name The name of the page.\n     * @param properties A dictionary of properties of the page.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public async page(category: string, name: string, properties?: any, options?: any): Promise;\n\n    /**\n     * The page method lets you record page views on your website, along with optional extra information about the page being viewed.\n     *\n     * @param category The category of the page.\n     * @param name The name of the page.\n     * @param properties A dictionary of properties of the page.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public async page(category?: string, name?: string, properties?: any, options?: any): Promise {\n        await SegmentService._segmentInstance.page(category, name, properties, options);\n\n        return this;\n    }\n\n    /**\n     * The group method associates an identified user with a company, organization, project, workspace, team, tribe, platoon,\n     * assemblage, cluster, troop, gang, party, society or any other name you came up with for the same concept.\n     *\n     * @param groupId The Group ID to associate with the current user.\n     * @param traits A dictionary of traits for the group.\n     *\n     * @returns\n     */\n    public async group(groupId: string, traits?: any): Promise {\n        await SegmentService._segmentInstance.group(groupId, traits);\n\n        return this;\n    }\n\n    /**\n     * The alias method combines two previously unassociated user identities.\n     *\n     * @param userId The new user ID you want to associate with the user.\n     * @param previousId The previous ID that the user was recognized by. This defaults to the currently identified user’s ID.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public async alias(userId: string, previousId?: string, options?: any): Promise {\n        await SegmentService._segmentInstance.alias(userId, previousId, options);\n\n        return this;\n    }\n\n    /**\n     * The ready method allows you execute a promise that will be called as soon as all of your enabled destinations have loaded\n     * and analytics.js has completed initialization.\n     *\n     * @returns\n     */\n    public async ready(): Promise {\n        await SegmentService._segmentInstance.ready();\n\n        return this;\n    }\n\n    /**\n     * Return information about the currently identified user\n     *\n     * @returns Informations about the currently identified user\n     */\n    public user(): User | null {\n        return SegmentService._segmentInstance.instance.user();\n    }\n\n    /**\n     * Return identifier about the currently identified user\n     *\n     * @returns Identifier about the currently identified user\n     */\n    public id(): string | null {\n        return this.user()?.id();\n    }\n\n    /**\n     * Override the default Anonymous ID\n     *\n     * @param anonymousId New anonymous ID\n     */\n    public setAnonymousId(anonymousId: string): void {\n        SegmentService._segmentInstance.setAnonymousId(anonymousId);\n    }\n\n    /**\n     * Return traits about the currently identified user\n     *\n     * @returns Traits about the currently identified user\n     */\n    public traits(): any {\n        return this.user()?.traits();\n    }\n\n    /**\n     * Reset the id, including anonymousId, and clear traits for the currently identified user and group.\n     */\n    public reset(): void {\n        SegmentService._segmentInstance.reset();\n    }\n\n    /**\n     * Turn on/off debug mode, logging helpful messages to the console.\n     *\n     * @param enabled Enable or not the debug mode\n     */\n    public debug(enabled?: boolean): void {\n        SegmentService._segmentInstance.debug(enabled);\n    }\n\n    /**\n     * Set listeners for these events and run your own custom code.\n     *\n     * @param method Name of the method to listen for\n     * @param callback A function to execute after each the emitted method\n     */\n    public on(method: string, callback: (event?: string, properties?: any, options?: any) => any): void {\n        SegmentService._segmentInstance.on(method, callback);\n    }\n\n    /**\n     * Attaches the `track` call as a handler to a link\n     *\n     * @param elements DOM element or an array of DOM elements to be bound with track method.\n     * @param event The name of the event, passed to the `track` method or a function that returns a string to be used\n     *              as the name of the track event.\n     * @param properties A dictionary of properties to pass with the `track` method.\n     */\n    public trackLink(elements: HTMLElement | HTMLElement[], event: string | Function, properties?: any | Function): void {\n        SegmentService._segmentInstance.trackLink(elements, event, properties);\n    }\n\n    /**\n     * Binds a `track` call to a form submission.\n     *\n     * @param forms The form element to track or an array of form\n     * @param event The name of the event, passed to the `track` method.\n     * @param properties A dictionary of properties to pass with the `track` method.\n     */\n    public trackForm(forms: HTMLFormElement | HTMLFormElement[], event: string | Function, properties?: any | Function): void {\n        SegmentService._segmentInstance.trackSubmit(forms, event, properties);\n    }\n\n    /**\n     * Add a source middleware called on events\n     *\n     * @param middleware Custom function\n     */\n    public addSourceMiddleware(middleware: SourceMiddleware): void {\n        SegmentService._segmentInstance.addSourceMiddleware(middleware);\n    }\n\n    /**\n     * Add destination middlewares called on events\n     *\n     * @param integration Integration name\n     * @param middlewares Custom functions\n     */\n    public addDestinationMiddleware(integration: string, ...middlewares: DestinationMiddleware[]): void {\n        SegmentService._segmentInstance.addDestinationMiddleware(integration, ...middlewares);\n    }\n\n    /**\n     * Register plugins\n     *\n     * @param plugins\n     */\n    public async register(...plugins: NewSegmentPlugin[]): Promise {\n        await SegmentService._segmentInstance.register(...plugins);\n\n        return;\n    }\n\n    public get segmentInstance(): Analytics {\n        return SegmentService._segmentInstance.instance;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WindowWrapper.html":{"url":"injectables/WindowWrapper.html","title":"injectable - WindowWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WindowWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/window-wrapper.ts\n        \n\n\n            \n                Description\n            \n            \n                Window Wrapper for Angular AOT\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                analytics\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        analytics\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AnalyticsSnippet\n\n                    \n                \n                    \n                        \n                                Defined in src/window-wrapper.ts:10\n                        \n                    \n\n            \n                \n                    Segment Analytics.js instance\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport type { AnalyticsSnippet } from \"@segment/analytics-next\";\n\n/**\n * Window Wrapper for Angular AOT\n */\n@Injectable()\nexport class WindowWrapper {\n    /** Segment Analytics.js instance */\n    public analytics: AnalyticsSnippet;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/ngx-segment-analytics.config.ts\n            \n            interface\n            SegmentConfig\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/ngx-segment-analytics.config.ts\n            \n            variable\n            DEFAULT_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ngx-segment-analytics.config.ts\n            \n            variable\n            SEGMENT_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/ngx-segment-analytics.module.ts\n            \n            function\n            getWindow\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/ngx-segment-analytics.service.ts\n            \n            injectable\n            SegmentService\n            \n                81 %\n                (22/27)\n            \n        \n        \n            \n                \n                src/ngx-segment-analytics.service.ts\n            \n            interface\n            SegmentPlugin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/window-wrapper.ts\n            \n            injectable\n            WindowWrapper\n            \n                100 %\n                (2/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getWindow   (src/.../ngx-segment-analytics.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/ngx-segment-analytics.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getWindow\n                        \n                    \n                \n            \n            \n                \ngetWindow(platformId: any)\n                \n            \n\n\n\n\n            \n                \n                        Window Provider for Angular AOT\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                platformId\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngx-segment-analytics\n\n\n\n\n\n\nThis Angular module provides an API for Segment using the analytics.js official library.\nCompatible with Angular AOT and Universal.\nInstallation\nTo install this library, run:\nExample :$ npm install --save ngx-segment-analyticsConsuming Segment\nAdd the SegmentModule to your Angular AppModule:\nExample :import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n// Import the Segment module\nimport { SegmentModule } from 'ngx-segment-analytics';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    // Segment Importation\n    SegmentModule.forRoot({ apiKey: 'YOUR_WRITE_APIKEY', debug: true, loadOnInitialization: true })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }You can use the SegmentService in any constructor as a injected service :\nExample :import { Component, OnInit } from '@angular/core';\nimport { SegmentService } from 'ngx-segment-analytics';\n@Component({\n    selector: 'hero',\n    templateUrl: './hero.component.html',\n    styleUrls: ['./hero.component.css']\n})\nexport class HeroComponent implements OnInit {\n\n    constructor(private segment: SegmentService) { }\n\n    public ngOnInit() {\n        this.segment.track('load an hero')\n            .then(() => console.log(\"Event sended\"));\n    }\n\n}Documentation\nA full documentation is available here\nAPI\nThis API is compatible with analytics.js but returns Promises instead of taking callbacks in parameters.\nExample :load(apiKey: string, options: any);\nget plugins: {[pluginName :string]: SegmentPlugin};\nidentify(userId?: string, traits?: any, options?: any): Promise;\ntrack(event: string, properties?: any, options?: any): Promise;\npage(category?: string, name?: string, properties?: any, options?: any): Promise;\ngroup(groupId: string, traits?: any): Promise;\nalias(userId: string, previousId?: string, options?: any): Promise;\nready(): Promise;\nuser(): any;\nid(): any;\ntraits(): any;\nreset(): void;\ndebug(enabled?: boolean): void;\non(method: string, callback: (event?: string, properties?: any, options?: any) => any): void;\ntrackLink(elements: HTMLElement | HTMLElement[], event: string | Function, properties?: Object | Function): void;\ntrackForm(forms: HTMLElement | HTMLElement[], event: string | Function, properties?: Object | Function): void;\ntimeout(timeout: number): void;\naddSourceMiddleware(middleware: ({integrations, payload, next}) => void): void;Development\nTo lint all *.ts files:\nExample :$ npm run lintTo generate all *.js, *.d.ts and *.metadata.json files:\nExample :$ npm run buildTo publish on npmjs registry :\nExample :$ npm publish distLicense\nMIT ©2019 OpenDecide\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2017 OpenDecide\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        SegmentModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 17.0.0\n        \n            Keywords : angular, segment\n        \n            Bugs : https://github.com/opendecide/ngx-segment-analytics/issues\n        \n            License : MIT\n        \n            Repository : https://github.com/opendecide/ngx-segment-analytics\n        \n            Author : OpenDecide\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DestinationMiddleware   (src/.../ngx-segment-analytics.service.ts)\n                        \n                        \n                            SegmentNextMiddleware   (src/.../ngx-segment-analytics.service.ts)\n                        \n                        \n                            SourceMiddleware   (src/.../ngx-segment-analytics.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/ngx-segment-analytics.service.ts\n    \n    \n        \n            \n                \n                    \n                    DestinationMiddleware\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SegmentNextMiddleware\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SourceMiddleware\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DEFAULT_CONFIG   (src/.../ngx-segment-analytics.config.ts)\n                        \n                        \n                            SEGMENT_CONFIG   (src/.../ngx-segment-analytics.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/ngx-segment-analytics.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SegmentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    debug: false,\n    loadOnInitialization: true, // Compatibility \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SEGMENT_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InjectionToken\n\n                    \n                \n                \n                    \n                        Default value : new InjectionToken('ngx-segment-analytics.config')\n                    \n                \n\n            \n                \n                    Segment Configuration Injection Token\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
